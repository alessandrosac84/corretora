{"version":3,"file":"menu.js","sources":["../../../src/lib/menu/index.ts","../../../src/lib/menu/menu-module.ts","../../../src/lib/menu/menu-trigger.ts","../../../src/lib/menu/menu-directive.ts","../../../src/lib/menu/menu-item.ts","../../../src/lib/menu/menu-errors.ts","../../../src/lib/menu/menu-animations.ts"],"sourcesContent":["/**\n * Generated bundle index. Do not edit.\n */\n\nexport {MAT_MENU_SCROLL_STRATEGY,fadeInItems,transformMenu,MatMenuModule,MatMenu,MatMenuDefaultOptions,MAT_MENU_DEFAULT_OPTIONS,MatMenuItem,MatMenuTrigger,MatMenuPanel,MenuPositionX,MenuPositionY} from './public_api';\n\nexport {MatMenuItemBase as ɵa,_MatMenuItemMixinBase as ɵb} from './menu-item';\nexport {MAT_MENU_SCROLL_STRATEGY_PROVIDER as ɵd,MAT_MENU_SCROLL_STRATEGY_PROVIDER_FACTORY as ɵc} from './menu-trigger';","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {MatCommonModule} from '@angular/material/core';\nimport {OverlayModule} from '@angular/cdk/overlay';\nimport {MatMenu, MAT_MENU_DEFAULT_OPTIONS} from './menu-directive';\nimport {MatMenuItem} from './menu-item';\nimport {MatMenuTrigger, MAT_MENU_SCROLL_STRATEGY_PROVIDER} from './menu-trigger';\nimport {MatRippleModule} from '@angular/material/core';\nexport class MatMenuModule {static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n  imports: [\n    OverlayModule,\n    CommonModule,\n    MatRippleModule,\n    MatCommonModule,\n  ],\n  exports: [MatMenu, MatMenuItem, MatMenuTrigger, MatCommonModule],\n  declarations: [MatMenu, MatMenuItem, MatMenuTrigger],\n  providers: [\n    MAT_MENU_SCROLL_STRATEGY_PROVIDER,\n    {\n      provide: MAT_MENU_DEFAULT_OPTIONS,\n      useValue: {\n        overlapTrigger: true,\n        xPosition: 'after',\n        yPosition: 'below',\n      },\n    }\n  ],\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction MatMenuModule_tsickle_Closure_declarations() {\n/** @type {?} */\nMatMenuModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nMatMenuModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {isFakeMousedownFromScreenReader} from '@angular/cdk/a11y';\nimport {Direction, Directionality} from '@angular/cdk/bidi';\nimport {LEFT_ARROW, RIGHT_ARROW} from '@angular/cdk/keycodes';\nimport {\n  ConnectedPositionStrategy,\n  HorizontalConnectionPos,\n  Overlay,\n  OverlayRef,\n  OverlayConfig,\n  RepositionScrollStrategy,\n  ScrollStrategy,\n  VerticalConnectionPos,\n} from '@angular/cdk/overlay';\nimport {TemplatePortal} from '@angular/cdk/portal';\nimport {filter, RxChain} from '@angular/cdk/rxjs';\nimport {\n  AfterViewInit,\n  Directive,\n  ElementRef,\n  EventEmitter,\n  Inject,\n  InjectionToken,\n  Input,\n  OnDestroy,\n  Optional,\n  Output,\n  Self,\n  ViewContainerRef,\n} from '@angular/core';\nimport {merge} from 'rxjs/observable/merge';\nimport {of as observableOf} from 'rxjs/observable/of';\nimport {Subscription} from 'rxjs/Subscription';\nimport {MatMenu} from './menu-directive';\nimport {throwMatMenuMissingError} from './menu-errors';\nimport {MatMenuItem} from './menu-item';\nimport {MatMenuPanel} from './menu-panel';\nimport {MenuPositionX, MenuPositionY} from './menu-positions';\n/**\n * Injection token that determines the scroll handling while the menu is open.\n */\nexport const MAT_MENU_SCROLL_STRATEGY =\n    new InjectionToken<() => ScrollStrategy>('mat-menu-scroll-strategy');\n/**\n * \\@docs-private\n * @param {?} overlay\n * @return {?}\n */\nexport function MAT_MENU_SCROLL_STRATEGY_PROVIDER_FACTORY(overlay: Overlay):\n    () => RepositionScrollStrategy {\n  return () => overlay.scrollStrategies.reposition();\n}\n/**\n * \\@docs-private\n */\nexport const MAT_MENU_SCROLL_STRATEGY_PROVIDER = {\n  provide: MAT_MENU_SCROLL_STRATEGY,\n  deps: [Overlay],\n  useFactory: MAT_MENU_SCROLL_STRATEGY_PROVIDER_FACTORY,\n};\n/**\n * Default top padding of the menu panel.\n */\nexport const MENU_PANEL_TOP_PADDING = 8;\n/**\n * This directive is intended to be used in conjunction with an mat-menu tag.  It is\n * responsible for toggling the display of the provided menu instance.\n */\nexport class MatMenuTrigger implements AfterViewInit, OnDestroy {\nprivate _portal: TemplatePortal<any>;\nprivate _overlayRef: OverlayRef | null = null;\nprivate _menuOpen: boolean = false;\nprivate _closeSubscription = Subscription.EMPTY;\nprivate _positionSubscription = Subscription.EMPTY;\nprivate _hoverSubscription = Subscription.EMPTY;\nprivate _openedByMouse: boolean = false;\n/**\n * @deprecated\n * @return {?}\n */\nget _deprecatedMatMenuTriggerFor(): MatMenuPanel {\n    return this.menu;\n  }\n/**\n * @param {?} v\n * @return {?}\n */\nset _deprecatedMatMenuTriggerFor(v: MatMenuPanel) {\n    this.menu = v;\n  }\n/**\n * References the menu instance that the trigger is associated with.\n */\nmenu: MatMenuPanel;\n/**\n * Event emitted when the associated menu is opened.\n */\nonMenuOpen = new EventEmitter<void>();\n/**\n * Event emitted when the associated menu is closed.\n */\nonMenuClose = new EventEmitter<void>();\n/**\n * @param {?} _overlay\n * @param {?} _element\n * @param {?} _viewContainerRef\n * @param {?} _scrollStrategy\n * @param {?} _parentMenu\n * @param {?} _menuItemInstance\n * @param {?} _dir\n */\nconstructor(private _overlay: Overlay,\nprivate _element: ElementRef,\nprivate _viewContainerRef: ViewContainerRef,\nprivate _scrollStrategy,\nprivate _parentMenu: MatMenu,\nprivate _menuItemInstance: MatMenuItem,\nprivate _dir: Directionality) {\n\n    if (_menuItemInstance) {\n      _menuItemInstance._triggersSubmenu = this.triggersSubmenu();\n    }\n  }\n/**\n * @return {?}\n */\nngAfterViewInit() {\n    this._checkMenu();\n\n    this.menu.close.subscribe(reason => {\n      this.closeMenu();\n\n      // If a click closed the menu, we should close the entire chain of nested menus.\n      if (reason === 'click' && this._parentMenu) {\n        this._parentMenu.close.emit(reason);\n      }\n    });\n\n    if (this.triggersSubmenu()) {\n      // Subscribe to changes in the hovered item in order to toggle the panel.\n      this._hoverSubscription = filter\n          .call(this._parentMenu.hover(), active => active === this._menuItemInstance)\n          .subscribe(() => {\n            this._openedByMouse = true;\n            this.openMenu();\n          });\n    }\n  }\n/**\n * @return {?}\n */\nngOnDestroy() {\n    if (this._overlayRef) {\n      this._overlayRef.dispose();\n      this._overlayRef = null;\n    }\n\n    this._cleanUpSubscriptions();\n  }\n/**\n * Whether the menu is open.\n * @return {?}\n */\nget menuOpen(): boolean {\n    return this._menuOpen;\n  }\n/**\n * The text direction of the containing app.\n * @return {?}\n */\nget dir(): Direction {\n    return this._dir && this._dir.value === 'rtl' ? 'rtl' : 'ltr';\n  }\n/**\n * Whether the menu triggers a sub-menu or a top-level one.\n * @return {?}\n */\ntriggersSubmenu(): boolean {\n    return !!(this._menuItemInstance && this._parentMenu);\n  }\n/**\n * Toggles the menu between the open and closed states.\n * @return {?}\n */\ntoggleMenu(): void {\n    return this._menuOpen ? this.closeMenu() : this.openMenu();\n  }\n/**\n * Opens the menu.\n * @return {?}\n */\nopenMenu(): void {\n    if (!this._menuOpen) {\n      this._createOverlay().attach(this._portal);\n      this._closeSubscription = this._menuClosingActions().subscribe(() => this.menu.close.emit());\n      this._initMenu();\n\n      if (this.menu instanceof MatMenu) {\n        this.menu._startAnimation();\n      }\n    }\n  }\n/**\n * Closes the menu.\n * @return {?}\n */\ncloseMenu(): void {\n    if (this._overlayRef && this.menuOpen) {\n      this._resetMenu();\n      this._overlayRef.detach();\n      this._closeSubscription.unsubscribe();\n      this.menu.close.emit();\n\n      if (this.menu instanceof MatMenu) {\n        this.menu._resetAnimation();\n      }\n    }\n  }\n/**\n * Focuses the menu trigger.\n * @return {?}\n */\nfocus() {\n    this._element.nativeElement.focus();\n  }\n/**\n * This method sets the menu state to open and focuses the first item if\n * the menu was opened via the keyboard.\n * @return {?}\n */\nprivate _initMenu(): void {\n    this.menu.parentMenu = this.triggersSubmenu() ? this._parentMenu : undefined;\n    this.menu.direction = this.dir;\n    this._setMenuElevation();\n    this._setIsMenuOpen(true);\n\n    // Should only set focus if opened via the keyboard, so keyboard users can\n    // can easily navigate menu items. According to spec, mouse users should not\n    // see the focus style.\n    if (!this._openedByMouse) {\n      this.menu.focusFirstItem();\n    }\n  }\n/**\n * Updates the menu elevation based on the amount of parent menus that it has.\n * @return {?}\n */\nprivate _setMenuElevation(): void {\n    if (this.menu.setElevation) {\n      let /** @type {?} */ depth = 0;\n      let /** @type {?} */ parentMenu = this.menu.parentMenu;\n\n      while (parentMenu) {\n        depth++;\n        parentMenu = parentMenu.parentMenu;\n      }\n\n      this.menu.setElevation(depth);\n    }\n  }\n/**\n * This method resets the menu when it's closed, most importantly restoring\n * focus to the menu trigger if the menu was opened via the keyboard.\n * @return {?}\n */\nprivate _resetMenu(): void {\n    this._setIsMenuOpen(false);\n\n    // Focus only needs to be reset to the host element if the menu was opened\n    // by the keyboard and manually shifted to the first menu item.\n    if (!this._openedByMouse) {\n      this.focus();\n    }\n\n    this._openedByMouse = false;\n  }\n/**\n * @param {?} isOpen\n * @return {?}\n */\nprivate _setIsMenuOpen(isOpen: boolean): void {\n    this._menuOpen = isOpen;\n    this._menuOpen ? this.onMenuOpen.emit() : this.onMenuClose.emit();\n\n    if (this.triggersSubmenu()) {\n      this._menuItemInstance._highlighted = isOpen;\n    }\n  }\n/**\n * This method checks that a valid instance of MatMenu has been passed into\n * matMenuTriggerFor. If not, an exception is thrown.\n * @return {?}\n */\nprivate _checkMenu() {\n    if (!this.menu) {\n      throwMatMenuMissingError();\n    }\n  }\n/**\n * This method creates the overlay from the provided menu's template and saves its\n * OverlayRef so that it can be attached to the DOM when openMenu is called.\n * @return {?}\n */\nprivate _createOverlay(): OverlayRef {\n    if (!this._overlayRef) {\n      this._portal = new TemplatePortal(this.menu.templateRef, this._viewContainerRef);\n      const /** @type {?} */ config = this._getOverlayConfig();\n      this._subscribeToPositions( /** @type {?} */((config.positionStrategy as ConnectedPositionStrategy)));\n      this._overlayRef = this._overlay.create(config);\n    }\n\n    return this._overlayRef;\n  }\n/**\n * This method builds the configuration object needed to create the overlay, the OverlayState.\n * @return {?} OverlayConfig\n */\nprivate _getOverlayConfig(): OverlayConfig {\n    return new OverlayConfig({\n      positionStrategy: this._getPosition(),\n      hasBackdrop: !this.triggersSubmenu(),\n      backdropClass: 'cdk-overlay-transparent-backdrop',\n      direction: this.dir,\n      scrollStrategy: this._scrollStrategy()\n    });\n  }\n/**\n * Listens to changes in the position of the overlay and sets the correct classes\n * on the menu based on the new position. This ensures the animation origin is always\n * correct, even if a fallback position is used for the overlay.\n * @param {?} position\n * @return {?}\n */\nprivate _subscribeToPositions(position: ConnectedPositionStrategy): void {\n    this._positionSubscription = position.onPositionChange.subscribe(change => {\n      const /** @type {?} */ posX: MenuPositionX = change.connectionPair.overlayX === 'start' ? 'after' : 'before';\n      const /** @type {?} */ posY: MenuPositionY = change.connectionPair.overlayY === 'top' ? 'below' : 'above';\n\n      this.menu.setPositionClasses(posX, posY);\n    });\n  }\n/**\n * This method builds the position strategy for the overlay, so the menu is properly connected\n * to the trigger.\n * @return {?} ConnectedPositionStrategy\n */\nprivate _getPosition(): ConnectedPositionStrategy {\n    let [originX, originFallbackX]: HorizontalConnectionPos[] =\n        this.menu.xPosition === 'before' ? ['end', 'start'] : ['start', 'end'];\n\n    let [overlayY, overlayFallbackY]: VerticalConnectionPos[] =\n        this.menu.yPosition === 'above' ? ['bottom', 'top'] : ['top', 'bottom'];\n\n    let [originY, originFallbackY] = [overlayY, overlayFallbackY];\n    let [overlayX, overlayFallbackX] = [originX, originFallbackX];\n    let /** @type {?} */ offsetY = 0;\n\n    if (this.triggersSubmenu()) {\n      // When the menu is a sub-menu, it should always align itself\n      // to the edges of the trigger, instead of overlapping it.\n      overlayFallbackX = originX = this.menu.xPosition === 'before' ? 'start' : 'end';\n      originFallbackX = overlayX = originX === 'end' ? 'start' : 'end';\n\n      // TODO(crisbeto): this should be a function, once the overlay supports it.\n      // Right now it will be wrong for the fallback positions.\n      offsetY = overlayY === 'bottom' ? MENU_PANEL_TOP_PADDING : -MENU_PANEL_TOP_PADDING;\n    } else if (!this.menu.overlapTrigger) {\n      originY = overlayY === 'top' ? 'bottom' : 'top';\n      originFallbackY = overlayFallbackY === 'top' ? 'bottom' : 'top';\n    }\n\n    return this._overlay.position()\n        .connectedTo(this._element, {originX, originY}, {overlayX, overlayY})\n        .withDirection(this.dir)\n        .withOffsetY(offsetY)\n        .withFallbackPosition(\n            {originX: originFallbackX, originY},\n            {overlayX: overlayFallbackX, overlayY})\n        .withFallbackPosition(\n            {originX, originY: originFallbackY},\n            {overlayX, overlayY: overlayFallbackY})\n        .withFallbackPosition(\n            {originX: originFallbackX, originY: originFallbackY},\n            {overlayX: overlayFallbackX, overlayY: overlayFallbackY});\n  }\n/**\n * Cleans up the active subscriptions.\n * @return {?}\n */\nprivate _cleanUpSubscriptions(): void {\n    this._closeSubscription.unsubscribe();\n    this._positionSubscription.unsubscribe();\n    this._hoverSubscription.unsubscribe();\n  }\n/**\n * Returns a stream that emits whenever an action that should close the menu occurs.\n * @return {?}\n */\nprivate _menuClosingActions() {\n    const /** @type {?} */ backdrop = /** @type {?} */(( this._overlayRef)).backdropClick();\n    const /** @type {?} */ parentClose = this._parentMenu ? this._parentMenu.close : observableOf(null);\n    const /** @type {?} */ hover = this._parentMenu ? RxChain.from(this._parentMenu.hover())\n        .call(filter, active => active !== this._menuItemInstance)\n        .call(filter, () => this._menuOpen)\n        .result() : observableOf(null);\n\n    return merge(backdrop, parentClose, hover);\n  }\n/**\n * Handles mouse presses on the trigger.\n * @param {?} event\n * @return {?}\n */\n_handleMousedown(event: MouseEvent): void {\n    if (!isFakeMousedownFromScreenReader(event)) {\n      this._openedByMouse = true;\n\n      // Since clicking on the trigger won't close the menu if it opens a sub-menu,\n      // we should prevent focus from moving onto it via click to avoid the\n      // highlight from lingering on the menu item.\n      if (this.triggersSubmenu()) {\n        event.preventDefault();\n      }\n    }\n  }\n/**\n * Handles key presses on the trigger.\n * @param {?} event\n * @return {?}\n */\n_handleKeydown(event: KeyboardEvent): void {\n    const /** @type {?} */ keyCode = event.keyCode;\n\n    if (this.triggersSubmenu() && (\n            (keyCode === RIGHT_ARROW && this.dir === 'ltr') ||\n            (keyCode === LEFT_ARROW && this.dir === 'rtl'))) {\n      this.openMenu();\n    }\n  }\n/**\n * Handles click events on the trigger.\n * @param {?} event\n * @return {?}\n */\n_handleClick(event: MouseEvent): void {\n    if (this.triggersSubmenu()) {\n      // Stop event propagation to avoid closing the parent menu.\n      event.stopPropagation();\n      this.openMenu();\n    } else {\n      this.toggleMenu();\n    }\n  }\n\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n  selector: `[mat-menu-trigger-for], [matMenuTriggerFor]`,\n  host: {\n    'aria-haspopup': 'true',\n    '(mousedown)': '_handleMousedown($event)',\n    '(keydown)': '_handleKeydown($event)',\n    '(click)': '_handleClick($event)',\n  },\n  exportAs: 'matMenuTrigger'\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: Overlay, },\n{type: ElementRef, },\n{type: ViewContainerRef, },\n{type: undefined, decorators: [{ type: Inject, args: [MAT_MENU_SCROLL_STRATEGY, ] }, ]},\n{type: MatMenu, decorators: [{ type: Optional }, ]},\n{type: MatMenuItem, decorators: [{ type: Optional }, { type: Self }, ]},\n{type: Directionality, decorators: [{ type: Optional }, ]},\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'_deprecatedMatMenuTriggerFor': [{ type: Input, args: ['mat-menu-trigger-for', ] },],\n'menu': [{ type: Input, args: ['matMenuTriggerFor', ] },],\n'onMenuOpen': [{ type: Output },],\n'onMenuClose': [{ type: Output },],\n};\n}\n\nfunction MatMenuTrigger_tsickle_Closure_declarations() {\n/** @type {?} */\nMatMenuTrigger.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nMatMenuTrigger.ctorParameters;\n/** @type {?} */\nMatMenuTrigger.propDecorators;\n/** @type {?} */\nMatMenuTrigger.prototype._portal;\n/** @type {?} */\nMatMenuTrigger.prototype._overlayRef;\n/** @type {?} */\nMatMenuTrigger.prototype._menuOpen;\n/** @type {?} */\nMatMenuTrigger.prototype._closeSubscription;\n/** @type {?} */\nMatMenuTrigger.prototype._positionSubscription;\n/** @type {?} */\nMatMenuTrigger.prototype._hoverSubscription;\n/** @type {?} */\nMatMenuTrigger.prototype._openedByMouse;\n/**\n * References the menu instance that the trigger is associated with.\n * @type {?}\n */\nMatMenuTrigger.prototype.menu;\n/**\n * Event emitted when the associated menu is opened.\n * @type {?}\n */\nMatMenuTrigger.prototype.onMenuOpen;\n/**\n * Event emitted when the associated menu is closed.\n * @type {?}\n */\nMatMenuTrigger.prototype.onMenuClose;\n/** @type {?} */\nMatMenuTrigger.prototype._overlay;\n/** @type {?} */\nMatMenuTrigger.prototype._element;\n/** @type {?} */\nMatMenuTrigger.prototype._viewContainerRef;\n/** @type {?} */\nMatMenuTrigger.prototype._scrollStrategy;\n/** @type {?} */\nMatMenuTrigger.prototype._parentMenu;\n/** @type {?} */\nMatMenuTrigger.prototype._menuItemInstance;\n/** @type {?} */\nMatMenuTrigger.prototype._dir;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {AnimationEvent} from '@angular/animations';\nimport {FocusKeyManager} from '@angular/cdk/a11y';\nimport {Direction} from '@angular/cdk/bidi';\nimport {ESCAPE, LEFT_ARROW, RIGHT_ARROW} from '@angular/cdk/keycodes';\nimport {RxChain, startWith, switchMap} from '@angular/cdk/rxjs';\nimport {\n  AfterContentInit,\n  ChangeDetectionStrategy,\n  Component,\n  ContentChildren,\n  ElementRef,\n  EventEmitter,\n  Inject,\n  InjectionToken,\n  Input,\n  OnDestroy,\n  Output,\n  QueryList,\n  TemplateRef,\n  ViewChild,\n  ViewEncapsulation,\n} from '@angular/core';\nimport {Observable} from 'rxjs/Observable';\nimport {merge} from 'rxjs/observable/merge';\nimport {Subscription} from 'rxjs/Subscription';\nimport {fadeInItems, transformMenu} from './menu-animations';\nimport {throwMatMenuInvalidPositionX, throwMatMenuInvalidPositionY} from './menu-errors';\nimport {MatMenuItem} from './menu-item';\nimport {MatMenuPanel} from './menu-panel';\nimport {MenuPositionX, MenuPositionY} from './menu-positions';\n\n\n/** Default `mat-menu` options that can be overridden. */\nexport interface MatMenuDefaultOptions {\n  xPosition: MenuPositionX;\n  yPosition: MenuPositionY;\n  overlapTrigger: boolean;\n}\n/**\n * Injection token to be used to override the default options for `mat-menu`.\n */\nexport const MAT_MENU_DEFAULT_OPTIONS =\n    new InjectionToken<MatMenuDefaultOptions>('mat-menu-default-options');\n/**\n * Start elevation for the menu panel.\n * \\@docs-private\n */\nconst MAT_MENU_BASE_ELEVATION = 2;\nexport class MatMenu implements AfterContentInit, MatMenuPanel, OnDestroy {\nprivate _keyManager: FocusKeyManager<MatMenuItem>;\nprivate _xPosition: MenuPositionX = this._defaultOptions.xPosition;\nprivate _yPosition: MenuPositionY = this._defaultOptions.yPosition;\nprivate _previousElevation: string;\n/**\n * Subscription to tab events on the menu panel\n */\nprivate _tabSubscription = Subscription.EMPTY;\n/**\n * Config object to be passed into the menu's ngClass\n */\n_classList: any = {};\n/**\n * Current state of the panel animation.\n */\n_panelAnimationState: 'void' | 'enter-start' | 'enter' = 'void';\n/**\n * Parent menu of the current menu panel.\n */\nparentMenu: MatMenuPanel | undefined;\n/**\n * Layout direction of the menu.\n */\ndirection: Direction;\n/**\n * Position of the menu in the X axis.\n * @return {?}\n */\nget xPosition() { return this._xPosition; }\n/**\n * @param {?} value\n * @return {?}\n */\nset xPosition(value: MenuPositionX) {\n    if (value !== 'before' && value !== 'after') {\n      throwMatMenuInvalidPositionX();\n    }\n    this._xPosition = value;\n    this.setPositionClasses();\n  }\n/**\n * Position of the menu in the Y axis.\n * @return {?}\n */\nget yPosition() { return this._yPosition; }\n/**\n * @param {?} value\n * @return {?}\n */\nset yPosition(value: MenuPositionY) {\n    if (value !== 'above' && value !== 'below') {\n      throwMatMenuInvalidPositionY();\n    }\n    this._yPosition = value;\n    this.setPositionClasses();\n  }\n\n   templateRef: TemplateRef<any>;\n/**\n * List of the items inside of a menu.\n */\nitems: QueryList<MatMenuItem>;\n/**\n * Whether the menu should overlap its trigger.\n */\noverlapTrigger = this._defaultOptions.overlapTrigger;\n/**\n * This method takes classes set on the host mat-menu element and applies them on the\n * menu template that displays in the overlay container.  Otherwise, it's difficult\n * to style the containing menu from outside the component.\n * @param {?} classes list of class names\n * @return {?}\n */\nset classList(classes: string) {\n    if (classes && classes.length) {\n      this._classList = classes.split(' ').reduce((obj: any, className: string) => {\n        obj[className] = true;\n        return obj;\n      }, {});\n\n      this._elementRef.nativeElement.className = '';\n      this.setPositionClasses();\n    }\n  }\n/**\n * Event emitted when the menu is closed.\n */\nclose = new EventEmitter<void | 'click' | 'keydown'>();\n/**\n * @param {?} _elementRef\n * @param {?} _defaultOptions\n */\nconstructor(\nprivate _elementRef: ElementRef,\nprivate _defaultOptions: MatMenuDefaultOptions) { }\n/**\n * @return {?}\n */\nngAfterContentInit() {\n    this._keyManager = new FocusKeyManager<MatMenuItem>(this.items).withWrap();\n    this._tabSubscription = this._keyManager.tabOut.subscribe(() => this.close.emit('keydown'));\n  }\n/**\n * @return {?}\n */\nngOnDestroy() {\n    this._tabSubscription.unsubscribe();\n    this.close.emit();\n    this.close.complete();\n  }\n/**\n * Stream that emits whenever the hovered menu item changes.\n * @return {?}\n */\nhover(): Observable<MatMenuItem> {\n    return RxChain.from(this.items.changes)\n      .call(startWith, this.items)\n      .call(switchMap, (items: MatMenuItem[]) => merge(...items.map(item => item.hover)))\n      .result();\n  }\n/**\n * Handle a keyboard event from the menu, delegating to the appropriate action.\n * @param {?} event\n * @return {?}\n */\n_handleKeydown(event: KeyboardEvent) {\n    switch (event.keyCode) {\n      case ESCAPE:\n        this.close.emit('keydown');\n        event.stopPropagation();\n      break;\n      case LEFT_ARROW:\n        if (this.parentMenu && this.direction === 'ltr') {\n          this.close.emit('keydown');\n        }\n      break;\n      case RIGHT_ARROW:\n        if (this.parentMenu && this.direction === 'rtl') {\n          this.close.emit('keydown');\n        }\n      break;\n      default:\n        this._keyManager.onKeydown(event);\n    }\n  }\n/**\n * Focus the first item in the menu. This method is used by the menu trigger\n * to focus the first item when the menu is opened by the ENTER key.\n * @return {?}\n */\nfocusFirstItem() {\n    this._keyManager.setFirstItemActive();\n  }\n/**\n * It's necessary to set position-based classes to ensure the menu panel animation\n * folds out from the correct direction.\n * @param {?=} posX\n * @param {?=} posY\n * @return {?}\n */\nsetPositionClasses(posX = this.xPosition, posY = this.yPosition): void {\n    this._classList['mat-menu-before'] = posX === 'before';\n    this._classList['mat-menu-after'] = posX === 'after';\n    this._classList['mat-menu-above'] = posY === 'above';\n    this._classList['mat-menu-below'] = posY === 'below';\n  }\n/**\n * Sets the menu panel elevation.\n * @param {?} depth Number of parent menus that come before the menu.\n * @return {?}\n */\nsetElevation(depth: number): void {\n    // The elevation starts at the base and increases by one for each level.\n    const /** @type {?} */ newElevation = `mat-elevation-z${MAT_MENU_BASE_ELEVATION + depth}`;\n    const /** @type {?} */ customElevation = Object.keys(this._classList).find(c => c.startsWith('mat-elevation-z'));\n\n    if (!customElevation || customElevation === this._previousElevation) {\n      if (this._previousElevation) {\n        this._classList[this._previousElevation] = false;\n      }\n\n      this._classList[newElevation] = true;\n      this._previousElevation = newElevation;\n    }\n  }\n/**\n * Starts the enter animation.\n * @return {?}\n */\n_startAnimation() {\n    this._panelAnimationState = 'enter-start';\n  }\n/**\n * Resets the panel animation to its initial state.\n * @return {?}\n */\n_resetAnimation() {\n    this._panelAnimationState = 'void';\n  }\n/**\n * Callback that is invoked when the panel animation completes.\n * @param {?} event\n * @return {?}\n */\n_onAnimationDone(event: AnimationEvent) {\n    // After the initial expansion is done, trigger the second phase of the enter animation.\n    if (event.toState === 'enter-start') {\n      this._panelAnimationState = 'enter';\n    }\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  moduleId: module.id,\n  selector: 'mat-menu',\n  templateUrl: 'menu.html',\n  styleUrls: ['menu.css'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  preserveWhitespaces: false,\n  animations: [\n    transformMenu,\n    fadeInItems\n  ],\n  exportAs: 'matMenu'\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n{type: undefined, decorators: [{ type: Inject, args: [MAT_MENU_DEFAULT_OPTIONS, ] }, ]},\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'xPosition': [{ type: Input },],\n'yPosition': [{ type: Input },],\n'templateRef': [{ type: ViewChild, args: [TemplateRef, ] },],\n'items': [{ type: ContentChildren, args: [MatMenuItem, ] },],\n'overlapTrigger': [{ type: Input },],\n'classList': [{ type: Input, args: ['class', ] },],\n'close': [{ type: Output },],\n};\n}\n\nfunction MatMenu_tsickle_Closure_declarations() {\n/** @type {?} */\nMatMenu.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nMatMenu.ctorParameters;\n/** @type {?} */\nMatMenu.propDecorators;\n/** @type {?} */\nMatMenu.prototype._keyManager;\n/** @type {?} */\nMatMenu.prototype._xPosition;\n/** @type {?} */\nMatMenu.prototype._yPosition;\n/** @type {?} */\nMatMenu.prototype._previousElevation;\n/**\n * Subscription to tab events on the menu panel\n * @type {?}\n */\nMatMenu.prototype._tabSubscription;\n/**\n * Config object to be passed into the menu's ngClass\n * @type {?}\n */\nMatMenu.prototype._classList;\n/**\n * Current state of the panel animation.\n * @type {?}\n */\nMatMenu.prototype._panelAnimationState;\n/**\n * Parent menu of the current menu panel.\n * @type {?}\n */\nMatMenu.prototype.parentMenu;\n/**\n * Layout direction of the menu.\n * @type {?}\n */\nMatMenu.prototype.direction;\n/** @type {?} */\nMatMenu.prototype.templateRef;\n/**\n * List of the items inside of a menu.\n * @type {?}\n */\nMatMenu.prototype.items;\n/**\n * Whether the menu should overlap its trigger.\n * @type {?}\n */\nMatMenu.prototype.overlapTrigger;\n/**\n * Event emitted when the menu is closed.\n * @type {?}\n */\nMatMenu.prototype.close;\n/** @type {?} */\nMatMenu.prototype._elementRef;\n/** @type {?} */\nMatMenu.prototype._defaultOptions;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {FocusableOption} from '@angular/cdk/a11y';\nimport {\n  ChangeDetectionStrategy,\n  Component,\n  ElementRef,\n  OnDestroy,\n  ViewEncapsulation,\n} from '@angular/core';\nimport {CanDisable, mixinDisabled} from '@angular/material/core';\nimport {Subject} from 'rxjs/Subject';\n/**\n * \\@docs-private\n */\nexport class MatMenuItemBase {}\nexport const /** @type {?} */ _MatMenuItemMixinBase = mixinDisabled(MatMenuItemBase);\n/**\n * This directive is intended to be used inside an mat-menu tag.\n * It exists mostly to set the role attribute.\n */\nexport class MatMenuItem extends _MatMenuItemMixinBase implements FocusableOption, CanDisable,\n  OnDestroy {\n/**\n * Stream that emits when the menu item is hovered.\n */\nhover: Subject<MatMenuItem> = new Subject();\n/**\n * Whether the menu item is highlighted.\n */\n_highlighted: boolean = false;\n/**\n * Whether the menu item acts as a trigger for a sub-menu.\n */\n_triggersSubmenu: boolean = false;\n/**\n * @param {?} _elementRef\n */\nconstructor(private _elementRef: ElementRef) {\n    super();\n  }\n/**\n * Focuses the menu item.\n * @return {?}\n */\nfocus(): void {\n    this._getHostElement().focus();\n  }\n/**\n * @return {?}\n */\nngOnDestroy() {\n    this.hover.complete();\n  }\n/**\n * Used to set the `tabindex`.\n * @return {?}\n */\n_getTabIndex(): string {\n    return this.disabled ? '-1' : '0';\n  }\n/**\n * Returns the host DOM element.\n * @return {?}\n */\n_getHostElement(): HTMLElement {\n    return this._elementRef.nativeElement;\n  }\n/**\n * Prevents the default element actions if it is disabled.\n * @param {?} event\n * @return {?}\n */\n_checkDisabled(event: Event): void {\n    if (this.disabled) {\n      event.preventDefault();\n      event.stopPropagation();\n    }\n  }\n/**\n * Emits to the hover stream.\n * @return {?}\n */\n_emitHoverEvent() {\n    if (!this.disabled) {\n      this.hover.next(this);\n    }\n  }\n\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  moduleId: module.id,\n  selector: '[mat-menu-item]',\n  inputs: ['disabled'],\n  host: {\n    'role': 'menuitem',\n    'class': 'mat-menu-item',\n    '[class.mat-menu-item-highlighted]': '_highlighted',\n    '[class.mat-menu-item-submenu-trigger]': '_triggersSubmenu',\n    '[attr.tabindex]': '_getTabIndex()',\n    '[attr.aria-disabled]': 'disabled.toString()',\n    '[attr.disabled]': 'disabled || null',\n    '(click)': '_checkDisabled($event)',\n    '(mouseenter)': '_emitHoverEvent()',\n  },\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  preserveWhitespaces: false,\n  templateUrl: 'menu-item.html',\n  exportAs: 'matMenuItem',\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n];\n}\n\nfunction MatMenuItem_tsickle_Closure_declarations() {\n/** @type {?} */\nMatMenuItem.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nMatMenuItem.ctorParameters;\n/**\n * Stream that emits when the menu item is hovered.\n * @type {?}\n */\nMatMenuItem.prototype.hover;\n/**\n * Whether the menu item is highlighted.\n * @type {?}\n */\nMatMenuItem.prototype._highlighted;\n/**\n * Whether the menu item acts as a trigger for a sub-menu.\n * @type {?}\n */\nMatMenuItem.prototype._triggersSubmenu;\n/** @type {?} */\nMatMenuItem.prototype._elementRef;\n}\n\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","\n/**\n * Throws an exception for the case when menu trigger doesn't have a valid mat-menu instance\n * \\@docs-private\n * @return {?}\n */\nexport function throwMatMenuMissingError() {\n  throw Error(`mat-menu-trigger: must pass in an mat-menu instance.\n\n    Example:\n      <mat-menu #menu=\"matMenu\"></mat-menu>\n      <button [matMenuTriggerFor]=\"menu\"></button>`);\n}\n/**\n * Throws an exception for the case when menu's x-position value isn't valid.\n * In other words, it doesn't match 'before' or 'after'.\n * \\@docs-private\n * @return {?}\n */\nexport function throwMatMenuInvalidPositionX() {\n  throw Error(`x-position value must be either 'before' or after'.\n      Example: <mat-menu x-position=\"before\" #menu=\"matMenu\"></mat-menu>`);\n}\n/**\n * Throws an exception for the case when menu's y-position value isn't valid.\n * In other words, it doesn't match 'above' or 'below'.\n * \\@docs-private\n * @return {?}\n */\nexport function throwMatMenuInvalidPositionY() {\n  throw Error(`y-position value must be either 'above' or below'.\n      Example: <mat-menu y-position=\"above\" #menu=\"matMenu\"></mat-menu>`);\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport{\n  trigger,\n  state,\n  style,\n  animate,\n  transition,\n  AnimationTriggerMetadata,\n} from '@angular/animations';\n\n/**\n * Below are all the animations for the mat-menu component.\n * Animation duration and timing values are based on:\n * https://material.io/guidelines/components/menus.html#menus-usage\n */\n\n\n/**\n * This animation controls the menu panel's entry and exit from the page.\n *\n * When the menu panel is added to the DOM, it scales in and fades in its border.\n *\n * When the menu panel is removed from the DOM, it simply fades out after a brief\n * delay to display the ripple.\n */\n\n// TODO(kara): switch to :enter and :leave once Mobile Safari is sorted out.\nexport const /** @type {?} */ transformMenu: AnimationTriggerMetadata = trigger('transformMenu', [\n  state('void', style({\n    opacity: 0,\n    // This starts off from 0.01, instead of 0, because there's an issue in the Angular animations\n    // as of 4.2, which causes the animation to be skipped if it starts from 0.\n    transform: 'scale(0.01, 0.01)'\n  })),\n  state('enter-start', style({\n    opacity: 1,\n    transform: 'scale(1, 0.5)'\n  })),\n  state('enter', style({\n    transform: 'scale(1, 1)'\n  })),\n  transition('void => enter-start', animate('100ms linear')),\n  transition('enter-start => enter', animate('300ms cubic-bezier(0.25, 0.8, 0.25, 1)')),\n  transition('* => void', animate('150ms 50ms linear', style({opacity: 0})))\n]);\n/**\n * This animation fades in the background color and content of the menu panel\n * after its containing element is scaled in.\n */\nexport const fadeInItems: AnimationTriggerMetadata = trigger('fadeInItems', [\n  state('showing', style({opacity: 1})),\n  transition('void => *', [\n    style({opacity: 0}),\n    animate('400ms 100ms cubic-bezier(0.55, 0, 0.55, 0.2)')\n  ])\n]);\n"],"names":["observableOf"],"mappings":"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"}