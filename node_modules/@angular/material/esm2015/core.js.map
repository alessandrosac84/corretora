{"version":3,"file":"core.js","sources":["../../../src/lib/core/index.ts","../../../src/lib/core/testing/month-constants.ts","../../../src/lib/core/style/apply-transform.ts","../../../src/lib/core/placeholder/placeholder-options.ts","../../../src/lib/core/option/index.ts","../../../src/lib/core/option/option.ts","../../../src/lib/core/option/optgroup.ts","../../../src/lib/core/selection/index.ts","../../../src/lib/core/selection/pseudo-checkbox/pseudo-checkbox.ts","../../../src/lib/core/ripple/index.ts","../../../src/lib/core/ripple/ripple.ts","../../../src/lib/core/ripple/ripple-renderer.ts","../../../src/lib/core/ripple/ripple-ref.ts","../../../src/lib/core/line/line.ts","../../../src/lib/core/gestures/gesture-config.ts","../../../src/lib/core/error/error-options.ts","../../../src/lib/core/datetime/index.ts","../../../src/lib/core/datetime/native-date-formats.ts","../../../src/lib/core/datetime/date-formats.ts","../../../src/lib/core/datetime/native-date-adapter.ts","../../../src/lib/core/util/object-extend.ts","../../../src/lib/core/datetime/date-adapter.ts","../../../src/lib/core/coordination/unique-selection-dispatcher.ts","../../../src/lib/core/common-behaviors/tabindex.ts","../../../src/lib/core/common-behaviors/disable-ripple.ts","../../../src/lib/core/common-behaviors/color.ts","../../../src/lib/core/common-behaviors/disabled.ts","../../../src/lib/core/common-behaviors/common-module.ts","../../../src/lib/core/compatibility/compatibility.ts","../../../src/lib/core/animation/animation.ts"],"sourcesContent":["/**\n * Generated bundle index. Do not edit.\n */\n\nexport {AnimationCurves,AnimationDurations,MatCommonModule,MATERIAL_SANITY_CHECKS,CanDisable,mixinDisabled,CanColor,mixinColor,ThemePalette,CanDisableRipple,mixinDisableRipple,HasTabIndex,mixinTabIndex,MATERIAL_COMPATIBILITY_MODE,MAT_ELEMENTS_SELECTOR,MD_ELEMENTS_SELECTOR,MatPrefixRejector,MdPrefixRejector,CompatibilityModule,NoConflictStyleCompatibilityMode,UniqueSelectionDispatcherListener,UniqueSelectionDispatcher,UNIQUE_SELECTION_DISPATCHER_PROVIDER_FACTORY,UNIQUE_SELECTION_DISPATCHER_PROVIDER,NativeDateModule,MatNativeDateModule,MAT_DATE_LOCALE,MAT_DATE_LOCALE_PROVIDER,DateAdapter,MatDateFormats,MAT_DATE_FORMATS,NativeDateAdapter,MAT_NATIVE_DATE_FORMATS,MAT_ERROR_GLOBAL_OPTIONS,ErrorStateMatcher,ErrorOptions,defaultErrorStateMatcher,showOnDirtyErrorStateMatcher,HammerInput,HammerStatic,Recognizer,RecognizerStatic,HammerInstance,HammerManager,GestureConfig,MatLine,MatLineSetter,MatLineModule,MatOptionModule,MatOptionSelectionChange,MatOption,MatOptgroupBase,_MatOptgroupMixinBase,MatOptgroup,MAT_PLACEHOLDER_GLOBAL_OPTIONS,FloatPlaceholderType,PlaceholderOptions,MatRipple,RippleGlobalOptions,MAT_RIPPLE_GLOBAL_OPTIONS,RippleRef,RippleState,RippleConfig,RIPPLE_FADE_IN_DURATION,RIPPLE_FADE_OUT_DURATION,MatRippleModule,MatPseudoCheckboxModule,MatPseudoCheckboxState,MatPseudoCheckbox,applyCssTransform,extendObject,JAN,FEB,MAR,APR,MAY,JUN,JUL,AUG,SEP,OCT,NOV,DEC} from './public_api';\n\nexport {RippleRenderer as Éµa} from './ripple/ripple-renderer';","\n/**\n * When constructing a Date, the month is zero-based. This can be confusing, since people are\n * used to seeing them one-based. So we create these aliases to make writing the tests easier.\n */\nexport const JAN = 0, FEB = 1, MAR = 2, APR = 3, MAY = 4, JUN = 5, JUL = 6, AUG = 7, SEP = 8,\n    OCT = 9, NOV = 10, DEC = 11;\n","\n/**\n * Applies a CSS transform to an element, including browser-prefixed properties.\n * @param {?} element\n * @param {?} transformValue\n * @return {?}\n */\nexport function applyCssTransform(element: HTMLElement, transformValue: string) {\n  // It's important to trim the result, because the browser will ignore the set operation\n  // if the string contains only whitespace.\n  let /** @type {?} */ value = transformValue.trim();\n\n  element.style.transform = value;\n  element.style.webkitTransform = value;\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport { InjectionToken } from '@angular/core';\n/**\n * InjectionToken that can be used to specify the global placeholder options.\n */\nexport const MAT_PLACEHOLDER_GLOBAL_OPTIONS =\n  new InjectionToken<PlaceholderOptions>('mat-placeholder-global-options');\n\n/** Type for the available floatPlaceholder values. */\nexport type FloatPlaceholderType = 'always' | 'never' | 'auto';\n\nexport interface PlaceholderOptions {\n  float?: FloatPlaceholderType;\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {MatRippleModule} from '../ripple/index';\nimport {MatPseudoCheckboxModule} from '../selection/index';\nimport {MatOption} from './option';\nimport {MatOptgroup} from './optgroup';\nexport class MatOptionModule {static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n  imports: [MatRippleModule, CommonModule, MatPseudoCheckboxModule],\n  exports: [MatOption, MatOptgroup],\n  declarations: [MatOption, MatOptgroup]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction MatOptionModule_tsickle_Closure_declarations() {\n/** @type {?} */\nMatOptionModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nMatOptionModule.ctorParameters;\n}\n\n\n\nexport {MatOptionSelectionChange,MatOption} from './option';\nexport {MatOptgroupBase,_MatOptgroupMixinBase,MatOptgroup} from './optgroup';\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {coerceBooleanProperty} from '@angular/cdk/coercion';\nimport {ENTER, SPACE} from '@angular/cdk/keycodes';\nimport {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ElementRef,\n  EventEmitter,\n  Input,\n  Optional,\n  Output,\n  QueryList,\n  ViewEncapsulation,\n} from '@angular/core';\nimport {MatOptgroup} from './optgroup';\n/**\n * Option IDs need to be unique across components, so this counter exists outside of\n * the component definition.\n */\nlet _uniqueIdCounter = 0;\n/**\n * Event object emitted by MatOption when selected or deselected.\n */\nexport class MatOptionSelectionChange {\n/**\n * @param {?} source\n * @param {?=} isUserInput\n */\nconstructor(public source: MatOption,\npublic isUserInput = false) { }\n}\n\nfunction MatOptionSelectionChange_tsickle_Closure_declarations() {\n/** @type {?} */\nMatOptionSelectionChange.prototype.source;\n/** @type {?} */\nMatOptionSelectionChange.prototype.isUserInput;\n}\n\n/**\n * Single option inside of a `<mat-select>` element.\n */\nexport class MatOption {\nprivate _selected: boolean = false;\nprivate _active: boolean = false;\nprivate _multiple: boolean = false;\nprivate _disableRipple: boolean = false;\n/**\n * Whether the option is disabled.\n */\nprivate _disabled: boolean = false;\nprivate _id: string = `mat-option-${_uniqueIdCounter++}`;\n/**\n * Whether the wrapping component is in multiple selection mode.\n * @return {?}\n */\nget multiple() { return this._multiple; }\n/**\n * @param {?} value\n * @return {?}\n */\nset multiple(value: boolean) {\n    if (value !== this._multiple) {\n      this._multiple = value;\n      this._changeDetectorRef.markForCheck();\n    }\n  }\n/**\n * The unique ID of the option.\n * @return {?}\n */\nget id() { return this._id; }\n/**\n * Whether or not the option is currently selected.\n * @return {?}\n */\nget selected(): boolean { return this._selected; }\n/**\n * The form value of the option.\n */\nvalue: any;\n/**\n * Whether the option is disabled.\n * @return {?}\n */\nget disabled() { return (this.group && this.group.disabled) || this._disabled; }\n/**\n * @param {?} value\n * @return {?}\n */\nset disabled(value: any) { this._disabled = coerceBooleanProperty(value); }\n/**\n * Whether ripples for the option are disabled.\n * @return {?}\n */\nget disableRipple() { return this._disableRipple; }\n/**\n * @param {?} value\n * @return {?}\n */\nset disableRipple(value: boolean) {\n    this._disableRipple = value;\n    this._changeDetectorRef.markForCheck();\n  }\n/**\n * Event emitted when the option is selected or deselected.\n */\nonSelectionChange = new EventEmitter<MatOptionSelectionChange>();\n/**\n * @param {?} _element\n * @param {?} _changeDetectorRef\n * @param {?} group\n */\nconstructor(\nprivate _element: ElementRef,\nprivate _changeDetectorRef: ChangeDetectorRef,\npublic readonly group: MatOptgroup) {}\n/**\n * Whether or not the option is currently active and ready to be selected.\n * An active option displays styles as if it is focused, but the\n * focus is actually retained somewhere else. This comes in handy\n * for components like autocomplete where focus must remain on the input.\n * @return {?}\n */\nget active(): boolean {\n    return this._active;\n  }\n/**\n * The displayed value of the option. It is necessary to show the selected option in the\n * select's trigger.\n * @return {?}\n */\nget viewValue(): string {\n    // TODO(kara): Add input property alternative for node envs.\n    return (this._getHostElement().textContent || '').trim();\n  }\n/**\n * Selects the option.\n * @return {?}\n */\nselect(): void {\n    this._selected = true;\n    this._changeDetectorRef.markForCheck();\n    this._emitSelectionChangeEvent();\n  }\n/**\n * Deselects the option.\n * @return {?}\n */\ndeselect(): void {\n    this._selected = false;\n    this._changeDetectorRef.markForCheck();\n    this._emitSelectionChangeEvent();\n  }\n/**\n * Sets focus onto this option.\n * @return {?}\n */\nfocus(): void {\n    const /** @type {?} */ element = this._getHostElement();\n\n    if (typeof element.focus === 'function') {\n      element.focus();\n    }\n  }\n/**\n * This method sets display styles on the option to make it appear\n * active. This is used by the ActiveDescendantKeyManager so key\n * events will display the proper options as active on arrow key events.\n * @return {?}\n */\nsetActiveStyles(): void {\n    if (!this._active) {\n      this._active = true;\n      this._changeDetectorRef.markForCheck();\n    }\n  }\n/**\n * This method removes display styles on the option that made it appear\n * active. This is used by the ActiveDescendantKeyManager so key\n * events will display the proper options as active on arrow key events.\n * @return {?}\n */\nsetInactiveStyles(): void {\n    if (this._active) {\n      this._active = false;\n      this._changeDetectorRef.markForCheck();\n    }\n  }\n/**\n * Gets the label to be used when determining whether the option should be focused.\n * @return {?}\n */\ngetLabel(): string {\n    return this.viewValue;\n  }\n/**\n * Ensures the option is selected when activated from the keyboard.\n * @param {?} event\n * @return {?}\n */\n_handleKeydown(event: KeyboardEvent): void {\n    if (event.keyCode === ENTER || event.keyCode === SPACE) {\n      this._selectViaInteraction();\n\n      // Prevent the page from scrolling down and form submits.\n      event.preventDefault();\n    }\n  }\n/**\n * Selects the option while indicating the selection came from the user. Used to\n * determine if the select's view -> model callback should be invoked.\n * @return {?}\n */\n_selectViaInteraction(): void {\n    if (!this.disabled) {\n      this._selected = this.multiple ? !this._selected : true;\n      this._changeDetectorRef.markForCheck();\n      this._emitSelectionChangeEvent(true);\n    }\n  }\n/**\n * Returns the correct tabindex for the option depending on disabled state.\n * @return {?}\n */\n_getTabIndex(): string {\n    return this.disabled ? '-1' : '0';\n  }\n/**\n * Gets the host DOM element.\n * @return {?}\n */\n_getHostElement(): HTMLElement {\n    return this._element.nativeElement;\n  }\n/**\n * Emits the selection change event.\n * @param {?=} isUserInput\n * @return {?}\n */\nprivate _emitSelectionChangeEvent(isUserInput = false): void {\n    this.onSelectionChange.emit(new MatOptionSelectionChange(this, isUserInput));\n  }\n/**\n * Counts the amount of option group labels that precede the specified option.\n * @param {?} optionIndex Index of the option at which to start counting.\n * @param {?} options Flat list of all of the options.\n * @param {?} optionGroups Flat list of all of the option groups.\n * @return {?}\n */\nstatic countGroupLabelsBeforeOption(optionIndex: number, options: QueryList<MatOption>,\n    optionGroups: QueryList<MatOptgroup>): number {\n\n    if (optionGroups.length) {\n      let /** @type {?} */ optionsArray = options.toArray();\n      let /** @type {?} */ groups = optionGroups.toArray();\n      let /** @type {?} */ groupCounter = 0;\n\n      for (let /** @type {?} */ i = 0; i < optionIndex + 1; i++) {\n        if (optionsArray[i].group && optionsArray[i].group === groups[groupCounter]) {\n          groupCounter++;\n        }\n      }\n\n      return groupCounter;\n    }\n\n    return 0;\n  }\n\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  moduleId: module.id,\n  selector: 'mat-option',\n  host: {\n    'role': 'option',\n    '[attr.tabindex]': '_getTabIndex()',\n    '[class.mat-selected]': 'selected',\n    '[class.mat-option-multiple]': 'multiple',\n    '[class.mat-active]': 'active',\n    '[id]': 'id',\n    '[attr.aria-selected]': 'selected.toString()',\n    '[attr.aria-disabled]': 'disabled.toString()',\n    '[class.mat-option-disabled]': 'disabled',\n    '(click)': '_selectViaInteraction()',\n    '(keydown)': '_handleKeydown($event)',\n    'class': 'mat-option',\n  },\n  templateUrl: 'option.html',\n  encapsulation: ViewEncapsulation.None,\n  preserveWhitespaces: false,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n{type: ChangeDetectorRef, },\n{type: MatOptgroup, decorators: [{ type: Optional }, ]},\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'value': [{ type: Input },],\n'disabled': [{ type: Input },],\n'onSelectionChange': [{ type: Output },],\n};\n}\n\nfunction MatOption_tsickle_Closure_declarations() {\n/** @type {?} */\nMatOption.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nMatOption.ctorParameters;\n/** @type {?} */\nMatOption.propDecorators;\n/** @type {?} */\nMatOption.prototype._selected;\n/** @type {?} */\nMatOption.prototype._active;\n/** @type {?} */\nMatOption.prototype._multiple;\n/** @type {?} */\nMatOption.prototype._disableRipple;\n/**\n * Whether the option is disabled.\n * @type {?}\n */\nMatOption.prototype._disabled;\n/** @type {?} */\nMatOption.prototype._id;\n/**\n * The form value of the option.\n * @type {?}\n */\nMatOption.prototype.value;\n/**\n * Event emitted when the option is selected or deselected.\n * @type {?}\n */\nMatOption.prototype.onSelectionChange;\n/** @type {?} */\nMatOption.prototype._element;\n/** @type {?} */\nMatOption.prototype._changeDetectorRef;\n/** @type {?} */\nMatOption.prototype.group;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {Component, ViewEncapsulation, Input, ChangeDetectionStrategy} from '@angular/core';\nimport {mixinDisabled, CanDisable} from '../common-behaviors/disabled';\n/**\n * \\@docs-private\n */\nexport class MatOptgroupBase { }\nexport const /** @type {?} */ _MatOptgroupMixinBase = mixinDisabled(MatOptgroupBase);\n\n// Counter for unique group ids.\nlet /** @type {?} */ _uniqueOptgroupIdCounter = 0;\n/**\n * Component that is used to group instances of `mat-option`.\n */\nexport class MatOptgroup extends _MatOptgroupMixinBase implements CanDisable {\n/**\n * Label for the option group.\n */\nlabel: string;\n/**\n * Unique id for the underlying label.\n */\n_labelId: string = `mat-optgroup-label-${_uniqueOptgroupIdCounter++}`;\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  moduleId: module.id,\n  selector: 'mat-optgroup',\n  templateUrl: 'optgroup.html',\n  encapsulation: ViewEncapsulation.None,\n  preserveWhitespaces: false,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  inputs: ['disabled'],\n  host: {\n    'class': 'mat-optgroup',\n    'role': 'group',\n    '[class.mat-optgroup-disabled]': 'disabled',\n    '[attr.aria-disabled]': 'disabled.toString()',\n    '[attr.aria-labelledby]': '_labelId',\n  }\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'label': [{ type: Input },],\n};\n}\n\nfunction MatOptgroup_tsickle_Closure_declarations() {\n/** @type {?} */\nMatOptgroup.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nMatOptgroup.ctorParameters;\n/** @type {?} */\nMatOptgroup.propDecorators;\n/**\n * Label for the option group.\n * @type {?}\n */\nMatOptgroup.prototype.label;\n/**\n * Unique id for the underlying label.\n * @type {?}\n */\nMatOptgroup.prototype._labelId;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {NgModule} from '@angular/core';\nimport {MatPseudoCheckbox} from './pseudo-checkbox/pseudo-checkbox';\nexport class MatPseudoCheckboxModule { static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n  exports: [MatPseudoCheckbox],\n  declarations: [MatPseudoCheckbox]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction MatPseudoCheckboxModule_tsickle_Closure_declarations() {\n/** @type {?} */\nMatPseudoCheckboxModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nMatPseudoCheckboxModule.ctorParameters;\n}\n\n\n\nexport {MatPseudoCheckboxState,MatPseudoCheckbox} from './pseudo-checkbox/pseudo-checkbox';\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {Component, ViewEncapsulation, Input, ChangeDetectionStrategy} from '@angular/core';\n\nexport type MatPseudoCheckboxState = 'unchecked' | 'checked' | 'indeterminate';\n/**\n * Component that shows a simplified checkbox without including any kind of \"real\" checkbox.\n * Meant to be used when the checkbox is purely decorative and a large number of them will be\n * included, such as for the options in a multi-select. Uses no SVGs or complex animations.\n * Note that theming is meant to be handled by the parent element, e.g.\n * `mat-primary .mat-pseudo-checkbox`.\n * \n * Note that this component will be completely invisible to screen-reader users. This is *not*\n * interchangeable with <mat-checkbox> and should *not* be used if the user would directly interact\n * with the checkbox. The pseudo-checkbox should only be used as an implementation detail of\n * more complex components that appropriately handle selected / checked state.\n * \\@docs-private\n */\nexport class MatPseudoCheckbox {\n/**\n * Display state of the checkbox.\n */\nstate: MatPseudoCheckboxState = 'unchecked';\n/**\n * Whether the checkbox is disabled.\n */\ndisabled: boolean = false;\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  moduleId: module.id,\n  encapsulation: ViewEncapsulation.None,\n  preserveWhitespaces: false,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  selector: 'mat-pseudo-checkbox',\n  styleUrls: ['pseudo-checkbox.css'],\n  template: '',\n  host: {\n    'class': 'mat-pseudo-checkbox',\n    '[class.mat-pseudo-checkbox-indeterminate]': 'state === \"indeterminate\"',\n    '[class.mat-pseudo-checkbox-checked]': 'state === \"checked\"',\n    '[class.mat-pseudo-checkbox-disabled]': 'disabled',\n  },\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'state': [{ type: Input },],\n'disabled': [{ type: Input },],\n};\n}\n\nfunction MatPseudoCheckbox_tsickle_Closure_declarations() {\n/** @type {?} */\nMatPseudoCheckbox.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nMatPseudoCheckbox.ctorParameters;\n/** @type {?} */\nMatPseudoCheckbox.propDecorators;\n/**\n * Display state of the checkbox.\n * @type {?}\n */\nMatPseudoCheckbox.prototype.state;\n/**\n * Whether the checkbox is disabled.\n * @type {?}\n */\nMatPseudoCheckbox.prototype.disabled;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {NgModule} from '@angular/core';\nimport {ScrollDispatchModule, VIEWPORT_RULER_PROVIDER} from '@angular/cdk/scrolling';\nimport {PlatformModule} from '@angular/cdk/platform';\nimport {MatCommonModule} from '../common-behaviors/common-module';\nimport {MatRipple} from './ripple';\n\nexport {MatRipple, RippleGlobalOptions, MAT_RIPPLE_GLOBAL_OPTIONS} from './ripple';\nexport {RippleRef, RippleState} from './ripple-ref';\nexport {RippleConfig, RIPPLE_FADE_IN_DURATION, RIPPLE_FADE_OUT_DURATION} from './ripple-renderer';\nexport class MatRippleModule {static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n  imports: [MatCommonModule, PlatformModule, ScrollDispatchModule],\n  exports: [MatRipple, MatCommonModule],\n  declarations: [MatRipple],\n  providers: [VIEWPORT_RULER_PROVIDER],\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction MatRippleModule_tsickle_Closure_declarations() {\n/** @type {?} */\nMatRippleModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nMatRippleModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {\n  Directive,\n  ElementRef,\n  Input,\n  Inject,\n  NgZone,\n  OnChanges,\n  SimpleChanges,\n  OnDestroy,\n  InjectionToken,\n  Optional,\n} from '@angular/core';\nimport {ViewportRuler} from '@angular/cdk/scrolling';\nimport {Platform} from '@angular/cdk/platform';\nimport {RippleConfig, RippleRenderer} from './ripple-renderer';\nimport {RippleRef} from './ripple-ref';\n\nexport interface RippleGlobalOptions {\n  disabled?: boolean;\n  baseSpeedFactor?: number;\n}\n/**\n * Injection token that can be used to specify the global ripple options.\n */\nexport const MAT_RIPPLE_GLOBAL_OPTIONS =\n    new InjectionToken<RippleGlobalOptions>('mat-ripple-global-options');\nexport class MatRipple implements OnChanges, OnDestroy {\n\n  /**\n   * The element that triggers the ripple when click events are received. Defaults to the\n   * directive's host element.\n   */\n  // Prevent TS metadata emit from referencing HTMLElement in ripple.js\n  // Otherwise running this code in a Node environment (e.g Universal) will not work.\n   trigger: HTMLElement|HTMLElement;\n/**\n * Whether the ripple always originates from the center of the host element's bounds, rather\n * than originating from the location of the click event.\n */\ncentered: boolean;\n/**\n * Whether click events will not trigger the ripple. Ripples can be still launched manually\n * by using the `launch()` method.\n */\ndisabled: boolean;\n/**\n * If set, the radius in pixels of foreground ripples when fully expanded. If unset, the radius\n * will be the distance from the center of the ripple to the furthest corner of the host element's\n * bounding rectangle.\n */\nradius: number = 0;\n/**\n * If set, the normal duration of ripple animations is divided by this value. For example,\n * setting it to 0.5 will cause the animations to take twice as long.\n * A changed speedFactor will not modify the fade-out duration of the ripples.\n */\nspeedFactor: number = 1;\n/**\n * Custom color for ripples.\n */\ncolor: string;\n/**\n * Whether foreground ripples should be visible outside the component's bounds.\n */\nunbounded: boolean;\n/**\n * Renderer for the ripple DOM manipulations.\n */\nprivate _rippleRenderer: RippleRenderer;\n/**\n * Options that are set globally for all ripples.\n */\nprivate _globalOptions: RippleGlobalOptions;\n/**\n * @param {?} elementRef\n * @param {?} ngZone\n * @param {?} ruler\n * @param {?} platform\n * @param {?} globalOptions\n */\nconstructor(\n    elementRef: ElementRef,\n    ngZone: NgZone,\n    ruler: ViewportRuler,\n    platform: Platform,\n      globalOptions: RippleGlobalOptions\n  ) {\n    this._rippleRenderer = new RippleRenderer(elementRef, ngZone, ruler, platform);\n    this._globalOptions = globalOptions ? globalOptions : {};\n\n    this._updateRippleRenderer();\n  }\n/**\n * @param {?} changes\n * @return {?}\n */\nngOnChanges(changes: SimpleChanges) {\n    if ((changes['trigger'] || changes['_matRippleTrigger']) && this.trigger) {\n      this._rippleRenderer.setTriggerElement(this.trigger);\n    }\n\n    this._updateRippleRenderer();\n  }\n/**\n * @return {?}\n */\nngOnDestroy() {\n    // Set the trigger element to null to cleanup all listeners.\n    this._rippleRenderer.setTriggerElement(null);\n  }\n/**\n * Launches a manual ripple at the specified position.\n * @param {?} pageX\n * @param {?} pageY\n * @param {?=} config\n * @return {?}\n */\nlaunch(pageX: number, pageY: number, config = this.rippleConfig): RippleRef {\n    return this._rippleRenderer.fadeInRipple(pageX, pageY, config);\n  }\n/**\n * Fades out all currently showing ripple elements.\n * @return {?}\n */\nfadeOutAll() {\n    this._rippleRenderer.fadeOutAll();\n  }\n/**\n * Ripple configuration from the directive's input values.\n * @return {?}\n */\nget rippleConfig(): RippleConfig {\n    return {\n      centered: this.centered,\n      speedFactor: this.speedFactor * (this._globalOptions.baseSpeedFactor || 1),\n      radius: this.radius,\n      color: this.color\n    };\n  }\n/**\n * Updates the ripple renderer with the latest ripple configuration.\n * @return {?}\n */\n_updateRippleRenderer() {\n    this._rippleRenderer.rippleDisabled = this._globalOptions.disabled || this.disabled;\n    this._rippleRenderer.rippleConfig = this.rippleConfig;\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n  selector: '[mat-ripple], [matRipple]',\n  exportAs: 'matRipple',\n  host: {\n    'class': 'mat-ripple',\n    '[class.mat-ripple-unbounded]': 'unbounded'\n  }\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n{type: NgZone, },\n{type: ViewportRuler, },\n{type: Platform, },\n{type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_RIPPLE_GLOBAL_OPTIONS, ] }, ]},\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'trigger': [{ type: Input, args: ['matRippleTrigger', ] },],\n'centered': [{ type: Input, args: ['matRippleCentered', ] },],\n'disabled': [{ type: Input, args: ['matRippleDisabled', ] },],\n'radius': [{ type: Input, args: ['matRippleRadius', ] },],\n'speedFactor': [{ type: Input, args: ['matRippleSpeedFactor', ] },],\n'color': [{ type: Input, args: ['matRippleColor', ] },],\n'unbounded': [{ type: Input, args: ['matRippleUnbounded', ] },],\n};\n}\n\nfunction MatRipple_tsickle_Closure_declarations() {\n/** @type {?} */\nMatRipple.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nMatRipple.ctorParameters;\n/** @type {?} */\nMatRipple.propDecorators;\n/** @type {?} */\nMatRipple.prototype.trigger;\n/**\n * Whether the ripple always originates from the center of the host element's bounds, rather\n * than originating from the location of the click event.\n * @type {?}\n */\nMatRipple.prototype.centered;\n/**\n * Whether click events will not trigger the ripple. Ripples can be still launched manually\n * by using the `launch()` method.\n * @type {?}\n */\nMatRipple.prototype.disabled;\n/**\n * If set, the radius in pixels of foreground ripples when fully expanded. If unset, the radius\n * will be the distance from the center of the ripple to the furthest corner of the host element's\n * bounding rectangle.\n * @type {?}\n */\nMatRipple.prototype.radius;\n/**\n * If set, the normal duration of ripple animations is divided by this value. For example,\n * setting it to 0.5 will cause the animations to take twice as long.\n * A changed speedFactor will not modify the fade-out duration of the ripples.\n * @type {?}\n */\nMatRipple.prototype.speedFactor;\n/**\n * Custom color for ripples.\n * @type {?}\n */\nMatRipple.prototype.color;\n/**\n * Whether foreground ripples should be visible outside the component's bounds.\n * @type {?}\n */\nMatRipple.prototype.unbounded;\n/**\n * Renderer for the ripple DOM manipulations.\n * @type {?}\n */\nMatRipple.prototype._rippleRenderer;\n/**\n * Options that are set globally for all ripples.\n * @type {?}\n */\nMatRipple.prototype._globalOptions;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {ElementRef, NgZone} from '@angular/core';\nimport {Platform} from '@angular/cdk/platform';\nimport {ViewportRuler} from '@angular/cdk/scrolling';\nimport {RippleRef, RippleState} from './ripple-ref';\n/**\n * Fade-in duration for the ripples. Can be modified with the speedFactor option.\n */\nexport const RIPPLE_FADE_IN_DURATION = 450;\n/**\n * Fade-out duration for the ripples in milliseconds. This can't be modified by the speedFactor.\n */\nexport const RIPPLE_FADE_OUT_DURATION = 400;\n\nexport type RippleConfig = {\n  color?: string;\n  centered?: boolean;\n  radius?: number;\n  speedFactor?: number;\n  persistent?: boolean;\n};\n/**\n * Helper service that performs DOM manipulations. Not intended to be used outside this module.\n * The constructor takes a reference to the ripple directive's host element and a map of DOM\n * event handlers to be installed on the element that triggers ripple animations.\n * This will eventually become a custom renderer once Angular support exists.\n * \\@docs-private\n */\nexport class RippleRenderer {\n/**\n * Element where the ripples are being added to.\n */\nprivate _containerElement: HTMLElement;\n/**\n * Element which triggers the ripple elements on mouse events.\n */\nprivate _triggerElement: HTMLElement | null;\n/**\n * Whether the mouse is currently down or not.\n */\nprivate _isMousedown: boolean = false;\n/**\n * Events to be registered on the trigger element.\n */\nprivate _triggerEvents = new Map<string, any>();\n/**\n * Set of currently active ripple references.\n */\nprivate _activeRipples = new Set<RippleRef>();\n/**\n * Ripple config for all ripples created by events.\n */\nrippleConfig: RippleConfig = {};\n/**\n * Whether mouse ripples should be created or not.\n */\nrippleDisabled: boolean = false;\n/**\n * @param {?} elementRef\n * @param {?} _ngZone\n * @param {?} _ruler\n * @param {?} platform\n */\nconstructor(\n      elementRef: ElementRef,\nprivate _ngZone: NgZone,\nprivate _ruler: ViewportRuler,\n      platform: Platform) {\n    // Only do anything if we're on the browser.\n    if (platform.isBrowser) {\n      this._containerElement = elementRef.nativeElement;\n\n      // Specify events which need to be registered on the trigger.\n      this._triggerEvents.set('mousedown', this.onMousedown.bind(this));\n      this._triggerEvents.set('mouseup', this.onMouseup.bind(this));\n      this._triggerEvents.set('mouseleave', this.onMouseLeave.bind(this));\n\n      // By default use the host element as trigger element.\n      this.setTriggerElement(this._containerElement);\n    }\n  }\n/**\n * Fades in a ripple at the given coordinates.\n * @param {?} pageX\n * @param {?} pageY\n * @param {?=} config\n * @return {?}\n */\nfadeInRipple(pageX: number, pageY: number, config: RippleConfig = {}): RippleRef {\n    let /** @type {?} */ containerRect = this._containerElement.getBoundingClientRect();\n\n    if (config.centered) {\n      pageX = containerRect.left + containerRect.width / 2;\n      pageY = containerRect.top + containerRect.height / 2;\n    } else {\n      // Subtract scroll values from the coordinates because calculations below\n      // are always relative to the viewport rectangle.\n      let /** @type {?} */ scrollPosition = this._ruler.getViewportScrollPosition();\n      pageX -= scrollPosition.left;\n      pageY -= scrollPosition.top;\n    }\n\n    let /** @type {?} */ radius = config.radius || distanceToFurthestCorner(pageX, pageY, containerRect);\n    let /** @type {?} */ duration = RIPPLE_FADE_IN_DURATION * (1 / (config.speedFactor || 1));\n    let /** @type {?} */ offsetX = pageX - containerRect.left;\n    let /** @type {?} */ offsetY = pageY - containerRect.top;\n\n    let /** @type {?} */ ripple = document.createElement('div');\n    ripple.classList.add('mat-ripple-element');\n\n    ripple.style.left = `${offsetX - radius}px`;\n    ripple.style.top = `${offsetY - radius}px`;\n    ripple.style.height = `${radius * 2}px`;\n    ripple.style.width = `${radius * 2}px`;\n\n    // If the color is not set, the default CSS color will be used.\n    ripple.style.backgroundColor = config.color || null;\n    ripple.style.transitionDuration = `${duration}ms`;\n\n    this._containerElement.appendChild(ripple);\n\n    // By default the browser does not recalculate the styles of dynamically created\n    // ripple elements. This is critical because then the `scale` would not animate properly.\n    enforceStyleRecalculation(ripple);\n\n    ripple.style.transform = 'scale(1)';\n\n    // Exposed reference to the ripple that will be returned.\n    let /** @type {?} */ rippleRef = new RippleRef(this, ripple, config);\n\n    rippleRef.state = RippleState.FADING_IN;\n\n    // Add the ripple reference to the list of all active ripples.\n    this._activeRipples.add(rippleRef);\n\n    // Wait for the ripple element to be completely faded in.\n    // Once it's faded in, the ripple can be hidden immediately if the mouse is released.\n    this.runTimeoutOutsideZone(() => {\n      rippleRef.state = RippleState.VISIBLE;\n\n      if (!config.persistent && !this._isMousedown) {\n        rippleRef.fadeOut();\n      }\n    }, duration);\n\n    return rippleRef;\n  }\n/**\n * Fades out a ripple reference.\n * @param {?} rippleRef\n * @return {?}\n */\nfadeOutRipple(rippleRef: RippleRef) {\n    // For ripples that are not active anymore, don't re-un the fade-out animation.\n    if (!this._activeRipples.delete(rippleRef)) {\n      return;\n    }\n\n    let /** @type {?} */ rippleEl = rippleRef.element;\n\n    rippleEl.style.transitionDuration = `${RIPPLE_FADE_OUT_DURATION}ms`;\n    rippleEl.style.opacity = '0';\n\n    rippleRef.state = RippleState.FADING_OUT;\n\n    // Once the ripple faded out, the ripple can be safely removed from the DOM.\n    this.runTimeoutOutsideZone(() => {\n      rippleRef.state = RippleState.HIDDEN; /** @type {?} */((\n      rippleEl.parentNode)).removeChild(rippleEl);\n    }, RIPPLE_FADE_OUT_DURATION);\n  }\n/**\n * Fades out all currently active ripples.\n * @return {?}\n */\nfadeOutAll() {\n    this._activeRipples.forEach(ripple => ripple.fadeOut());\n  }\n/**\n * Sets the trigger element and registers the mouse events.\n * @param {?} element\n * @return {?}\n */\nsetTriggerElement(element: HTMLElement | null) {\n    // Remove all previously register event listeners from the trigger element.\n    if (this._triggerElement) {\n      this._triggerEvents.forEach((fn, type) => { /** @type {?} */((\n        this._triggerElement)).removeEventListener(type, fn);\n      });\n    }\n\n    if (element) {\n      // If the element is not null, register all event listeners on the trigger element.\n      this._ngZone.runOutsideAngular(() => {\n        this._triggerEvents.forEach((fn, type) => element.addEventListener(type, fn));\n      });\n    }\n\n    this._triggerElement = element;\n  }\n/**\n * Listener being called on mousedown event.\n * @param {?} event\n * @return {?}\n */\nprivate onMousedown(event: MouseEvent) {\n    if (!this.rippleDisabled) {\n      this._isMousedown = true;\n      this.fadeInRipple(event.pageX, event.pageY, this.rippleConfig);\n    }\n  }\n/**\n * Listener being called on mouseup event.\n * @return {?}\n */\nprivate onMouseup() {\n    this._isMousedown = false;\n\n    // Fade-out all ripples that are completely visible and not persistent.\n    this._activeRipples.forEach(ripple => {\n      if (!ripple.config.persistent && ripple.state === RippleState.VISIBLE) {\n        ripple.fadeOut();\n      }\n    });\n  }\n/**\n * Listener being called on mouseleave event.\n * @return {?}\n */\nprivate onMouseLeave() {\n    if (this._isMousedown) {\n      this.onMouseup();\n    }\n  }\n/**\n * Runs a timeout outside of the Angular zone to avoid triggering the change detection.\n * @param {?} fn\n * @param {?=} delay\n * @return {?}\n */\nprivate runTimeoutOutsideZone(fn: Function, delay = 0) {\n    this._ngZone.runOutsideAngular(() => setTimeout(fn, delay));\n  }\n\n}\n\nfunction RippleRenderer_tsickle_Closure_declarations() {\n/**\n * Element where the ripples are being added to.\n * @type {?}\n */\nRippleRenderer.prototype._containerElement;\n/**\n * Element which triggers the ripple elements on mouse events.\n * @type {?}\n */\nRippleRenderer.prototype._triggerElement;\n/**\n * Whether the mouse is currently down or not.\n * @type {?}\n */\nRippleRenderer.prototype._isMousedown;\n/**\n * Events to be registered on the trigger element.\n * @type {?}\n */\nRippleRenderer.prototype._triggerEvents;\n/**\n * Set of currently active ripple references.\n * @type {?}\n */\nRippleRenderer.prototype._activeRipples;\n/**\n * Ripple config for all ripples created by events.\n * @type {?}\n */\nRippleRenderer.prototype.rippleConfig;\n/**\n * Whether mouse ripples should be created or not.\n * @type {?}\n */\nRippleRenderer.prototype.rippleDisabled;\n/** @type {?} */\nRippleRenderer.prototype._ngZone;\n/** @type {?} */\nRippleRenderer.prototype._ruler;\n}\n\n/**\n * @param {?} element\n * @return {?}\n */\nfunction enforceStyleRecalculation(element: HTMLElement) {\n  // Enforce a style recalculation by calling `getComputedStyle` and accessing any property.\n  // Calling `getPropertyValue` is important to let optimizers know that this is not a noop.\n  // See: https://gist.github.com/paulirish/5d52fb081b3570c81e3a\n  window.getComputedStyle(element).getPropertyValue('opacity');\n}\n/**\n * Returns the distance from the point (x, y) to the furthest corner of a rectangle.\n * @param {?} x\n * @param {?} y\n * @param {?} rect\n * @return {?}\n */\nfunction distanceToFurthestCorner(x: number, y: number, rect: ClientRect) {\n  const /** @type {?} */ distX = Math.max(Math.abs(x - rect.left), Math.abs(x - rect.right));\n  const /** @type {?} */ distY = Math.max(Math.abs(y - rect.top), Math.abs(y - rect.bottom));\n  return Math.sqrt(distX * distX + distY * distY);\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {RippleConfig, RippleRenderer} from './ripple-renderer';\nexport type RippleState = number;\nexport let RippleState: any = {};\nRippleState.FADING_IN = 0;\nRippleState.VISIBLE = 1;\nRippleState.FADING_OUT = 2;\nRippleState.HIDDEN = 3;\nRippleState[RippleState.FADING_IN] = \"FADING_IN\";\nRippleState[RippleState.VISIBLE] = \"VISIBLE\";\nRippleState[RippleState.FADING_OUT] = \"FADING_OUT\";\nRippleState[RippleState.HIDDEN] = \"HIDDEN\";\n\n/**\n * Reference to a previously launched ripple element.\n */\nexport class RippleRef {\n/**\n * Current state of the ripple reference.\n */\nstate: RippleState = RippleState.HIDDEN;\n/**\n * @param {?} _renderer\n * @param {?} element\n * @param {?} config\n */\nconstructor(\nprivate _renderer: RippleRenderer,\npublic element: HTMLElement,\npublic config: RippleConfig) {\n  }\n/**\n * Fades out the ripple element.\n * @return {?}\n */\nfadeOut() {\n    this._renderer.fadeOutRipple(this);\n  }\n}\n\nfunction RippleRef_tsickle_Closure_declarations() {\n/**\n * Current state of the ripple reference.\n * @type {?}\n */\nRippleRef.prototype.state;\n/** @type {?} */\nRippleRef.prototype._renderer;\n/** @type {?} */\nRippleRef.prototype.element;\n/** @type {?} */\nRippleRef.prototype.config;\n}\n\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {\n  NgModule,\n  Directive,\n  Renderer2,\n  ElementRef,\n  QueryList,\n} from '@angular/core';\nimport {MatCommonModule} from '../common-behaviors/common-module';\n/**\n * Shared directive to count lines inside a text area, such as a list item.\n * Line elements can be extracted with a \\@ContentChildren(MatLine) query, then\n * counted by checking the query list's length.\n */\nexport class MatLine {static decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n  selector: '[mat-line], [matLine]',\n  host: {'class': 'mat-line'}\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction MatLine_tsickle_Closure_declarations() {\n/** @type {?} */\nMatLine.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nMatLine.ctorParameters;\n}\n\n/**\n * Helper that takes a query list of lines and sets the correct class on the host.\n * \\@docs-private\n */\nexport class MatLineSetter {\n/**\n * @param {?} _lines\n * @param {?} _renderer\n * @param {?} _element\n */\nconstructor(private _lines: QueryList<MatLine>,\nprivate _renderer: Renderer2,\nprivate _element: ElementRef) {\n    this._setLineClass(this._lines.length);\n\n    this._lines.changes.subscribe(() => {\n      this._setLineClass(this._lines.length);\n    });\n  }\n/**\n * @param {?} count\n * @return {?}\n */\nprivate _setLineClass(count: number): void {\n    this._resetClasses();\n    if (count === 2 || count === 3) {\n      this._setClass(`mat-${count}-line`, true);\n    } else if (count > 3) {\n      this._setClass(`mat-multi-line`, true);\n    }\n  }\n/**\n * @return {?}\n */\nprivate _resetClasses(): void {\n    this._setClass('mat-2-line', false);\n    this._setClass('mat-3-line', false);\n    this._setClass('mat-multi-line', false);\n  }\n/**\n * @param {?} className\n * @param {?} isAdd\n * @return {?}\n */\nprivate _setClass(className: string, isAdd: boolean): void {\n    if (isAdd) {\n      this._renderer.addClass(this._element.nativeElement, className);\n    } else {\n      this._renderer.removeClass(this._element.nativeElement, className);\n    }\n  }\n\n}\n\nfunction MatLineSetter_tsickle_Closure_declarations() {\n/** @type {?} */\nMatLineSetter.prototype._lines;\n/** @type {?} */\nMatLineSetter.prototype._renderer;\n/** @type {?} */\nMatLineSetter.prototype._element;\n}\n\nexport class MatLineModule { static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n  imports: [MatCommonModule],\n  exports: [MatLine, MatCommonModule],\n  declarations: [MatLine],\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction MatLineModule_tsickle_Closure_declarations() {\n/** @type {?} */\nMatLineModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nMatLineModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {Injectable, isDevMode} from '@angular/core';\nimport {HammerGestureConfig} from '@angular/platform-browser';\nimport {HammerStatic, HammerInstance, Recognizer, RecognizerStatic} from './gesture-annotations';\nexport class GestureConfig extends HammerGestureConfig {\nprivate _hammer: HammerStatic = typeof window !== 'undefined' ? ( /** @type {?} */((window as any))).Hammer : null;\n\n  /* List of new event names to add to the gesture support list */\n  events: string[] = this._hammer ? [\n    'longpress',\n    'slide',\n    'slidestart',\n    'slideend',\n    'slideright',\n    'slideleft'\n  ] : [];\nconstructor() {\n    super();\n\n    if (!this._hammer && isDevMode()) {\n      console.warn(\n        'Could not find HammerJS. Certain Angular Material ' +\n        'components may not work correctly.'\n      );\n    }\n  }\n/**\n * Builds Hammer instance manually to add custom recognizers that match the Material Design spec.\n * \n * Our gesture names come from the Material Design gestures spec:\n * https://www.google.com/design/spec/patterns/gestures.html#gestures-touch-mechanics\n * \n * More information on default recognizers can be found in Hammer docs:\n * http://hammerjs.github.io/recognizer-pan/\n * http://hammerjs.github.io/recognizer-press/\n * \n * @param {?} element Element to which to assign the new HammerJS gestures.\n * @return {?} Newly-created HammerJS instance.\n */\nbuildHammer(element: HTMLElement): HammerInstance {\n    const /** @type {?} */ mc = new this._hammer(element);\n\n    // Default Hammer Recognizers.\n    let /** @type {?} */ pan = new this._hammer.Pan();\n    let /** @type {?} */ swipe = new this._hammer.Swipe();\n    let /** @type {?} */ press = new this._hammer.Press();\n\n    // Notice that a HammerJS recognizer can only depend on one other recognizer once.\n    // Otherwise the previous `recognizeWith` will be dropped.\n    // TODO: Confirm threshold numbers with Material Design UX Team\n    let /** @type {?} */ slide = this._createRecognizer(pan, {event: 'slide', threshold: 0}, swipe);\n    let /** @type {?} */ longpress = this._createRecognizer(press, {event: 'longpress', time: 500});\n\n    // Overwrite the default `pan` event to use the swipe event.\n    pan.recognizeWith(swipe);\n\n    // Add customized gestures to Hammer manager\n    mc.add([swipe, press, pan, slide, longpress]);\n\n    return /** @type {?} */(( mc as HammerInstance));\n  }\n/**\n * Creates a new recognizer, without affecting the default recognizers of HammerJS\n * @param {?} base\n * @param {?} options\n * @param {...?} inheritances\n * @return {?}\n */\nprivate _createRecognizer(base: Recognizer, options: any, ...inheritances: Recognizer[]) {\n    let /** @type {?} */ recognizer = new ( /** @type {?} */((base.constructor as RecognizerStatic)))(options);\n\n    inheritances.push(base);\n    inheritances.forEach(item => recognizer.recognizeWith(item));\n\n    return recognizer;\n  }\n\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction GestureConfig_tsickle_Closure_declarations() {\n/** @type {?} */\nGestureConfig.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nGestureConfig.ctorParameters;\n/** @type {?} */\nGestureConfig.prototype._hammer;\n/** @type {?} */\nGestureConfig.prototype.events;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {InjectionToken} from '@angular/core';\nimport {FormControl, FormGroupDirective, NgForm} from '@angular/forms';\n/**\n * Injection token that can be used to specify the global error options.\n */\nexport const MAT_ERROR_GLOBAL_OPTIONS =\n    new InjectionToken<ErrorOptions>('mat-error-global-options');\n\nexport type ErrorStateMatcher =\n    (control: FormControl, form: FormGroupDirective | NgForm) => boolean;\n\nexport interface ErrorOptions {\n  errorStateMatcher?: ErrorStateMatcher;\n}\n/**\n * Returns whether control is invalid and is either touched or is a part of a submitted form.\n * @param {?} control\n * @param {?} form\n * @return {?}\n */\nexport function defaultErrorStateMatcher(control: FormControl, form: FormGroupDirective | NgForm) {\n  const /** @type {?} */ isSubmitted = form && form.submitted;\n  return !!(control.invalid && (control.touched || isSubmitted));\n}\n/**\n * Returns whether control is invalid and is either dirty or is a part of a submitted form.\n * @param {?} control\n * @param {?} form\n * @return {?}\n */\nexport function showOnDirtyErrorStateMatcher(control: FormControl,\n    form: FormGroupDirective | NgForm) {\n  const /** @type {?} */ isSubmitted = form && form.submitted;\n  return !!(control.invalid && (control.dirty || isSubmitted));\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {NgModule} from '@angular/core';\nimport {DateAdapter, MAT_DATE_LOCALE_PROVIDER} from './date-adapter';\nimport {NativeDateAdapter} from './native-date-adapter';\nimport {MAT_DATE_FORMATS} from './date-formats';\nimport {MAT_NATIVE_DATE_FORMATS} from './native-date-formats';\n\nexport {MAT_DATE_LOCALE,MAT_DATE_LOCALE_PROVIDER,DateAdapter} from './date-adapter';\nexport {MatDateFormats,MAT_DATE_FORMATS} from './date-formats';\nexport {NativeDateAdapter} from './native-date-adapter';\nexport {MAT_NATIVE_DATE_FORMATS} from './native-date-formats';\nexport class NativeDateModule {static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n  providers: [\n    {provide: DateAdapter, useClass: NativeDateAdapter},\n    MAT_DATE_LOCALE_PROVIDER\n  ],\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction NativeDateModule_tsickle_Closure_declarations() {\n/** @type {?} */\nNativeDateModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nNativeDateModule.ctorParameters;\n}\n\nexport class MatNativeDateModule {static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n  imports: [NativeDateModule],\n  providers: [{provide: MAT_DATE_FORMATS, useValue: MAT_NATIVE_DATE_FORMATS}],\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction MatNativeDateModule_tsickle_Closure_declarations() {\n/** @type {?} */\nMatNativeDateModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nMatNativeDateModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {MatDateFormats} from './date-formats';\n\n\nexport const /** @type {?} */ MAT_NATIVE_DATE_FORMATS: MatDateFormats = {\n  parse: {\n    dateInput: null,\n  },\n  display: {\n    dateInput: {year: 'numeric', month: 'numeric', day: 'numeric'},\n    monthYearLabel: {year: 'numeric', month: 'short'},\n    dateA11yLabel: {year: 'numeric', month: 'long', day: 'numeric'},\n    monthYearA11yLabel: {year: 'numeric', month: 'long'},\n  }\n};\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {InjectionToken} from '@angular/core';\n\n\nexport type MatDateFormats = {\n  parse: {\n    dateInput: any\n  },\n  display: {\n    dateInput: any,\n    monthYearLabel: any,\n    dateA11yLabel: any,\n    monthYearA11yLabel: any,\n  }\n};\n\n\nexport const /** @type {?} */ MAT_DATE_FORMATS = new InjectionToken<MatDateFormats>('mat-date-formats');\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {Inject, Injectable, Optional} from '@angular/core';\nimport {DateAdapter, MAT_DATE_LOCALE} from './date-adapter';\nimport {extendObject} from '../util/object-extend';\n/**\n * Whether the browser supports the Intl API.\n */\nconst SUPPORTS_INTL_API = typeof Intl != 'undefined';\n/**\n * The default month names to use if Intl API is not available.\n */\nconst DEFAULT_MONTH_NAMES = {\n  'long': [\n    'January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September',\n    'October', 'November', 'December'\n  ],\n  'short': ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],\n  'narrow': ['J', 'F', 'M', 'A', 'M', 'J', 'J', 'A', 'S', 'O', 'N', 'D']\n};\n/**\n * The default date names to use if Intl API is not available.\n */\nconst DEFAULT_DATE_NAMES = range(31, i => String(i + 1));\n/**\n * The default day of the week names to use if Intl API is not available.\n */\nconst DEFAULT_DAY_OF_WEEK_NAMES = {\n  'long': ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'],\n  'short': ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'],\n  'narrow': ['S', 'M', 'T', 'W', 'T', 'F', 'S']\n};\n/**\n * Matches strings that have the form of a valid RFC 3339 string\n * (https://tools.ietf.org/html/rfc3339). Note that the string may not actually be a valid date\n * because the regex will match strings an with out of bounds month, date, etc.\n */\nconst ISO_8601_REGEX =\n    /^\\d{4}-\\d{2}-\\d{2}(?:T\\d{2}:\\d{2}:\\d{2}(?:\\.\\d+)?(?:Z|(?:(?:\\+|-)\\d{2}:\\d{2}))?)?$/;\n/**\n * Creates an array and fills it with values.\n * @template T\n * @param {?} length\n * @param {?} valueFunction\n * @return {?}\n */\nfunction range<T>(length: number, valueFunction: (index: number) => T): T[] {\n  const /** @type {?} */ valuesArray = Array(length);\n  for (let /** @type {?} */ i = 0; i < length; i++) {\n    valuesArray[i] = valueFunction(i);\n  }\n  return valuesArray;\n}\n/**\n * Adapts the native JS Date for use with cdk-based components that work with dates.\n */\nexport class NativeDateAdapter extends DateAdapter<Date> {\n/**\n * @param {?} matDateLocale\n */\nconstructor(  matDateLocale: string) {\n    super();\n    super.setLocale(matDateLocale);\n  }\n/**\n * Whether to use `timeZone: 'utc'` with `Intl.DateTimeFormat` when formatting dates.\n * Without this `Intl.DateTimeFormat` sometimes chooses the wrong timeZone, which can throw off\n * the result. (e.g. in the en-US locale `new Date(1800, 7, 14).toLocaleDateString()`\n * will produce `'8/13/1800'`.\n */\nuseUtcForDisplay = true;\n/**\n * @param {?} date\n * @return {?}\n */\ngetYear(date: Date): number {\n    return date.getFullYear();\n  }\n/**\n * @param {?} date\n * @return {?}\n */\ngetMonth(date: Date): number {\n    return date.getMonth();\n  }\n/**\n * @param {?} date\n * @return {?}\n */\ngetDate(date: Date): number {\n    return date.getDate();\n  }\n/**\n * @param {?} date\n * @return {?}\n */\ngetDayOfWeek(date: Date): number {\n    return date.getDay();\n  }\n/**\n * @param {?} style\n * @return {?}\n */\ngetMonthNames(style: 'long' | 'short' | 'narrow'): string[] {\n    if (SUPPORTS_INTL_API) {\n      let /** @type {?} */ dtf = new Intl.DateTimeFormat(this.locale, {month: style});\n      return range(12, i => this._stripDirectionalityCharacters(dtf.format(new Date(2017, i, 1))));\n    }\n    return DEFAULT_MONTH_NAMES[style];\n  }\n/**\n * @return {?}\n */\ngetDateNames(): string[] {\n    if (SUPPORTS_INTL_API) {\n      let /** @type {?} */ dtf = new Intl.DateTimeFormat(this.locale, {day: 'numeric'});\n      return range(31, i => this._stripDirectionalityCharacters(\n          dtf.format(new Date(2017, 0, i + 1))));\n    }\n    return DEFAULT_DATE_NAMES;\n  }\n/**\n * @param {?} style\n * @return {?}\n */\ngetDayOfWeekNames(style: 'long' | 'short' | 'narrow'): string[] {\n    if (SUPPORTS_INTL_API) {\n      let /** @type {?} */ dtf = new Intl.DateTimeFormat(this.locale, {weekday: style});\n      return range(7, i => this._stripDirectionalityCharacters(\n          dtf.format(new Date(2017, 0, i + 1))));\n    }\n    return DEFAULT_DAY_OF_WEEK_NAMES[style];\n  }\n/**\n * @param {?} date\n * @return {?}\n */\ngetYearName(date: Date): string {\n    if (SUPPORTS_INTL_API) {\n      let /** @type {?} */ dtf = new Intl.DateTimeFormat(this.locale, {year: 'numeric'});\n      return this._stripDirectionalityCharacters(dtf.format(date));\n    }\n    return String(this.getYear(date));\n  }\n/**\n * @return {?}\n */\ngetFirstDayOfWeek(): number {\n    // We can't tell using native JS Date what the first day of the week is, we default to Sunday.\n    return 0;\n  }\n/**\n * @param {?} date\n * @return {?}\n */\ngetNumDaysInMonth(date: Date): number {\n    return this.getDate(this._createDateWithOverflow(\n        this.getYear(date), this.getMonth(date) + 1, 0));\n  }\n/**\n * @param {?} date\n * @return {?}\n */\nclone(date: Date): Date {\n    return this.createDate(this.getYear(date), this.getMonth(date), this.getDate(date));\n  }\n/**\n * @param {?} year\n * @param {?} month\n * @param {?} date\n * @return {?}\n */\ncreateDate(year: number, month: number, date: number): Date {\n    // Check for invalid month and date (except upper bound on date which we have to check after\n    // creating the Date).\n    if (month < 0 || month > 11) {\n      throw Error(`Invalid month index \"${month}\". Month index has to be between 0 and 11.`);\n    }\n\n    if (date < 1) {\n      throw Error(`Invalid date \"${date}\". Date has to be greater than 0.`);\n    }\n\n    let /** @type {?} */ result = this._createDateWithOverflow(year, month, date);\n\n    // Check that the date wasn't above the upper bound for the month, causing the month to overflow\n    if (result.getMonth() != month) {\n      throw Error(`Invalid date \"${date}\" for month with index \"${month}\".`);\n    }\n\n    return result;\n  }\n/**\n * @return {?}\n */\ntoday(): Date {\n    return new Date();\n  }\n/**\n * @param {?} value\n * @return {?}\n */\nparse(value: any): Date | null {\n    // We have no way using the native JS Date to set the parse format or locale, so we ignore these\n    // parameters.\n    if (typeof value == 'number') {\n      return new Date(value);\n    }\n    return value ? new Date(Date.parse(value)) : null;\n  }\n/**\n * @param {?} date\n * @param {?} displayFormat\n * @return {?}\n */\nformat(date: Date, displayFormat: Object): string {\n    if (!this.isValid(date)) {\n      throw Error('NativeDateAdapter: Cannot format invalid date.');\n    }\n    if (SUPPORTS_INTL_API) {\n      if (this.useUtcForDisplay) {\n        date = new Date(Date.UTC(\n            date.getFullYear(), date.getMonth(), date.getDate(), date.getHours(),\n            date.getMinutes(), date.getSeconds(), date.getMilliseconds()));\n        displayFormat = extendObject({}, displayFormat, {timeZone: 'utc'});\n      }\n      let /** @type {?} */ dtf = new Intl.DateTimeFormat(this.locale, displayFormat);\n      return this._stripDirectionalityCharacters(dtf.format(date));\n    }\n    return this._stripDirectionalityCharacters(date.toDateString());\n  }\n/**\n * @param {?} date\n * @param {?} years\n * @return {?}\n */\naddCalendarYears(date: Date, years: number): Date {\n    return this.addCalendarMonths(date, years * 12);\n  }\n/**\n * @param {?} date\n * @param {?} months\n * @return {?}\n */\naddCalendarMonths(date: Date, months: number): Date {\n    let /** @type {?} */ newDate = this._createDateWithOverflow(\n        this.getYear(date), this.getMonth(date) + months, this.getDate(date));\n\n    // It's possible to wind up in the wrong month if the original month has more days than the new\n    // month. In this case we want to go to the last day of the desired month.\n    // Note: the additional + 12 % 12 ensures we end up with a positive number, since JS % doesn't\n    // guarantee this.\n    if (this.getMonth(newDate) != ((this.getMonth(date) + months) % 12 + 12) % 12) {\n      newDate = this._createDateWithOverflow(this.getYear(newDate), this.getMonth(newDate), 0);\n    }\n\n    return newDate;\n  }\n/**\n * @param {?} date\n * @param {?} days\n * @return {?}\n */\naddCalendarDays(date: Date, days: number): Date {\n    return this._createDateWithOverflow(\n        this.getYear(date), this.getMonth(date), this.getDate(date) + days);\n  }\n/**\n * @param {?} date\n * @return {?}\n */\ntoIso8601(date: Date): string {\n    return [\n      date.getUTCFullYear(),\n      this._2digit(date.getUTCMonth() + 1),\n      this._2digit(date.getUTCDate())\n    ].join('-');\n  }\n/**\n * @param {?} iso8601String\n * @return {?}\n */\nfromIso8601(iso8601String: string): Date | null {\n    // The `Date` constructor accepts formats other than ISO 8601, so we need to make sure the\n    // string is the right format first.\n    if (ISO_8601_REGEX.test(iso8601String)) {\n      let /** @type {?} */ d = new Date(iso8601String);\n      if (this.isValid(d)) {\n        return d;\n      }\n    }\n    return null;\n  }\n/**\n * @param {?} obj\n * @return {?}\n */\nisDateInstance(obj: any) {\n    return obj instanceof Date;\n  }\n/**\n * @param {?} date\n * @return {?}\n */\nisValid(date: Date) {\n    return !isNaN(date.getTime());\n  }\n/**\n * Creates a date but allows the month and date to overflow.\n * @param {?} year\n * @param {?} month\n * @param {?} date\n * @return {?}\n */\nprivate _createDateWithOverflow(year: number, month: number, date: number) {\n    let /** @type {?} */ result = new Date(year, month, date);\n\n    // We need to correct for the fact that JS native Date treats years in range [0, 99] as\n    // abbreviations for 19xx.\n    if (year >= 0 && year < 100) {\n      result.setFullYear(this.getYear(result) - 1900);\n    }\n    return result;\n  }\n/**\n * Pads a number to make it two digits.\n * @param {?} n The number to pad.\n * @return {?} The padded number.\n */\nprivate _2digit(n: number) {\n    return ('00' + n).slice(-2);\n  }\n/**\n * Strip out unicode LTR and RTL characters. Edge and IE insert these into formatted dates while\n * other browsers do not. We remove them to make output consistent and because they interfere with\n * date parsing.\n * @param {?} str The string to strip direction characters from.\n * @return {?} The stripped string.\n */\nprivate _stripDirectionalityCharacters(str: string) {\n    return str.replace(/[\\u200e\\u200f]/g, '');\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_DATE_LOCALE, ] }, ]},\n];\n}\n\nfunction NativeDateAdapter_tsickle_Closure_declarations() {\n/** @type {?} */\nNativeDateAdapter.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nNativeDateAdapter.ctorParameters;\n/**\n * Whether to use `timeZone: 'utc'` with `Intl.DateTimeFormat` when formatting dates.\n * Without this `Intl.DateTimeFormat` sometimes chooses the wrong timeZone, which can throw off\n * the result. (e.g. in the en-US locale `new Date(1800, 7, 14).toLocaleDateString()`\n * will produce `'8/13/1800'`.\n * @type {?}\n */\nNativeDateAdapter.prototype.useUtcForDisplay;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","\n/**\n * Extends an object with the *enumerable* and *own* properties of one or more source objects,\n * similar to Object.assign.\n * \n * @param {?} dest The object which will have properties copied to it.\n * @param {...?} sources The source objects from which properties will be copied.\n * @return {?}\n */\nexport function extendObject(dest: any, ...sources: any[]): any {\n  if (dest == null) {\n    throw TypeError('Cannot convert undefined or null to object');\n  }\n\n  for (let /** @type {?} */ source of sources) {\n    if (source != null) {\n      for (let /** @type {?} */ key in source) {\n        if (source.hasOwnProperty(key)) {\n          dest[key] = source[key];\n        }\n      }\n    }\n  }\n\n  return dest;\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {InjectionToken, LOCALE_ID} from '@angular/core';\nimport {Observable} from 'rxjs/Observable';\nimport {Subject} from 'rxjs/Subject';\n/**\n * InjectionToken for datepicker that can be used to override default locale code.\n */\nexport const MAT_DATE_LOCALE = new InjectionToken<string>('MAT_DATE_LOCALE');\n/**\n * Provider for MAT_DATE_LOCALE injection token.\n */\nexport const MAT_DATE_LOCALE_PROVIDER = {provide: MAT_DATE_LOCALE, useExisting: LOCALE_ID};\n/**\n * Adapts type `D` to be usable as a date by cdk-based components that work with dates.\n * @abstract\n */\nexport abstract class DateAdapter<D> {\n/**\n * The locale to use for all dates.\n */\nprotected locale: any;\n/**\n * A stream that emits when the locale changes.\n * @return {?}\n */\nget localeChanges(): Observable<void> { return this._localeChanges; }\n  protected _localeChanges= new Subject<void>();\n/**\n * Gets the year component of the given date.\n * @abstract\n * @param {?} date The date to extract the year from.\n * @return {?} The year component.\n */\ngetYear(date: D) {}\n/**\n * Gets the month component of the given date.\n * @abstract\n * @param {?} date The date to extract the month from.\n * @return {?} The month component (0-indexed, 0 = January).\n */\ngetMonth(date: D) {}\n/**\n * Gets the date of the month component of the given date.\n * @abstract\n * @param {?} date The date to extract the date of the month from.\n * @return {?} The month component (1-indexed, 1 = first of month).\n */\ngetDate(date: D) {}\n/**\n * Gets the day of the week component of the given date.\n * @abstract\n * @param {?} date The date to extract the day of the week from.\n * @return {?} The month component (0-indexed, 0 = Sunday).\n */\ngetDayOfWeek(date: D) {}\n/**\n * Gets a list of names for the months.\n * @abstract\n * @param {?} style The naming style (e.g. long = 'January', short = 'Jan', narrow = 'J').\n * @return {?} An ordered list of all month names, starting with January.\n */\ngetMonthNames(style: 'long' | 'short' | 'narrow') {}\n/**\n * Gets a list of names for the dates of the month.\n * @abstract\n * @return {?} An ordered list of all date of the month names, starting with '1'.\n */\ngetDateNames() {}\n/**\n * Gets a list of names for the days of the week.\n * @abstract\n * @param {?} style The naming style (e.g. long = 'Sunday', short = 'Sun', narrow = 'S').\n * @return {?} An ordered list of all weekday names, starting with Sunday.\n */\ngetDayOfWeekNames(style: 'long' | 'short' | 'narrow') {}\n/**\n * Gets the name for the year of the given date.\n * @abstract\n * @param {?} date The date to get the year name for.\n * @return {?} The name of the given year (e.g. '2017').\n */\ngetYearName(date: D) {}\n/**\n * Gets the first day of the week.\n * @abstract\n * @return {?} The first day of the week (0-indexed, 0 = Sunday).\n */\ngetFirstDayOfWeek() {}\n/**\n * Gets the number of days in the month of the given date.\n * @abstract\n * @param {?} date The date whose month should be checked.\n * @return {?} The number of days in the month of the given date.\n */\ngetNumDaysInMonth(date: D) {}\n/**\n * Clones the given date.\n * @abstract\n * @param {?} date The date to clone\n * @return {?} A new date equal to the given date.\n */\nclone(date: D) {}\n/**\n * Creates a date with the given year, month, and date. Does not allow over/under-flow of the\n * month and date.\n * @abstract\n * @param {?} year The full year of the date. (e.g. 89 means the year 89, not the year 1989).\n * @param {?} month The month of the date (0-indexed, 0 = January). Must be an integer 0 - 11.\n * @param {?} date The date of month of the date. Must be an integer 1 - length of the given month.\n * @return {?} The new date, or null if invalid.\n */\ncreateDate(year: number, month: number, date: number) {}\n/**\n * Gets today's date.\n * @abstract\n * @return {?} Today's date.\n */\ntoday() {}\n/**\n * Parses a date from a value.\n * @abstract\n * @param {?} value The value to parse.\n * @param {?} parseFormat The expected format of the value being parsed\n *     (type is implementation-dependent).\n * @return {?} The parsed date.\n */\nparse(value: any, parseFormat: any) {}\n/**\n * Formats a date as a string.\n * @abstract\n * @param {?} date The value to format.\n * @param {?} displayFormat The format to use to display the date as a string.\n * @return {?} The formatted date string.\n */\nformat(date: D, displayFormat: any) {}\n/**\n * Adds the given number of years to the date. Years are counted as if flipping 12 pages on the\n * calendar for each year and then finding the closest date in the new month. For example when\n * adding 1 year to Feb 29, 2016, the resulting date will be Feb 28, 2017.\n * @abstract\n * @param {?} date The date to add years to.\n * @param {?} years The number of years to add (may be negative).\n * @return {?} A new date equal to the given one with the specified number of years added.\n */\naddCalendarYears(date: D, years: number) {}\n/**\n * Adds the given number of months to the date. Months are counted as if flipping a page on the\n * calendar for each month and then finding the closest date in the new month. For example when\n * adding 1 month to Jan 31, 2017, the resulting date will be Feb 28, 2017.\n * @abstract\n * @param {?} date The date to add months to.\n * @param {?} months The number of months to add (may be negative).\n * @return {?} A new date equal to the given one with the specified number of months added.\n */\naddCalendarMonths(date: D, months: number) {}\n/**\n * Adds the given number of days to the date. Days are counted as if moving one cell on the\n * calendar for each day.\n * @abstract\n * @param {?} date The date to add days to.\n * @param {?} days The number of days to add (may be negative).\n * @return {?} A new date equal to the given one with the specified number of days added.\n */\naddCalendarDays(date: D, days: number) {}\n/**\n * Gets the RFC 3339 compatible string (https://tools.ietf.org/html/rfc3339) for the given date.\n * @abstract\n * @param {?} date The date to get the ISO date string for.\n * @return {?} The ISO date string date string.\n */\ntoIso8601(date: D) {}\n/**\n * Creates a date from an RFC 3339 compatible string (https://tools.ietf.org/html/rfc3339).\n * @abstract\n * @param {?} iso8601String The ISO date string to create a date from\n * @return {?} The date created from the ISO date string.\n */\nfromIso8601(iso8601String: string) {}\n/**\n * Checks whether the given object is considered a date instance by this DateAdapter.\n * @abstract\n * @param {?} obj The object to check\n * @return {?} Whether the object is a date instance.\n */\nisDateInstance(obj: any) {}\n/**\n * Checks whether the given date is valid.\n * @abstract\n * @param {?} date The date to check.\n * @return {?} Whether the date is valid.\n */\nisValid(date: D) {}\n/**\n * Sets the locale used for all dates.\n * @param {?} locale The new locale.\n * @return {?}\n */\nsetLocale(locale: any) {\n    this.locale = locale;\n    this._localeChanges.next();\n  }\n/**\n * Compares two dates.\n * @param {?} first The first date to compare.\n * @param {?} second The second date to compare.\n * @return {?} 0 if the dates are equal, a number less than 0 if the first date is earlier,\n *     a number greater than 0 if the first date is later.\n */\ncompareDate(first: D, second: D): number {\n    return this.getYear(first) - this.getYear(second) ||\n        this.getMonth(first) - this.getMonth(second) ||\n        this.getDate(first) - this.getDate(second);\n  }\n/**\n * Checks if two dates are equal.\n * @param {?} first The first date to check.\n * @param {?} second The second date to check.\n *     Null dates are considered equal to other null dates.\n * @return {?}\n */\nsameDate(first: D | null, second: D | null): boolean {\n    return first && second ? !this.compareDate(first, second) : first == second;\n  }\n/**\n * Clamp the given date between min and max dates.\n * @param {?} date The date to clamp.\n * @param {?=} min The minimum value to allow. If null or omitted no min is enforced.\n * @param {?=} max The maximum value to allow. If null or omitted no max is enforced.\n * @return {?} `min` if `date` is less than `min`, `max` if date is greater than `max`,\n *     otherwise `date`.\n */\nclampDate(date: D, min?: D | null, max?: D | null): D {\n    if (min && this.compareDate(date, min) < 0) {\n      return min;\n    }\n    if (max && this.compareDate(date, max) > 0) {\n      return max;\n    }\n    return date;\n  }\n}\n\nfunction DateAdapter_tsickle_Closure_declarations() {\n/**\n * The locale to use for all dates.\n * @type {?}\n */\nDateAdapter.prototype.locale;\n/** @type {?} */\nDateAdapter.prototype._localeChanges;\n}\n\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {Injectable, Optional, SkipSelf} from '@angular/core';\n\n\n// Users of the Dispatcher never need to see this type, but TypeScript requires it to be exported.\nexport type UniqueSelectionDispatcherListener = (id: string, name: string) => void;\n/**\n * Class to coordinate unique selection based on name.\n * Intended to be consumed as an Angular service.\n * This service is needed because native radio change events are only fired on the item currently\n * being selected, and we still need to uncheck the previous selection.\n * \n * This service does not *store* any IDs and names because they may change at any time, so it is\n * less error-prone if they are simply passed through when the events occur.\n */\nexport class UniqueSelectionDispatcher {\nprivate _listeners: UniqueSelectionDispatcherListener[] = [];\n/**\n * Notify other items that selection for the given name has been set.\n * @param {?} id ID of the item.\n * @param {?} name Name of the item.\n * @return {?}\n */\nnotify(id: string, name: string) {\n    for (let /** @type {?} */ listener of this._listeners) {\n      listener(id, name);\n    }\n  }\n/**\n * Listen for future changes to item selection.\n * @param {?} listener\n * @return {?} Function used to deregister listener\n * \n */\nlisten(listener: UniqueSelectionDispatcherListener): () => void {\n    this._listeners.push(listener);\n    return () => {\n      this._listeners = this._listeners.filter((registered: UniqueSelectionDispatcherListener) => {\n        return listener !== registered;\n      });\n    };\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction UniqueSelectionDispatcher_tsickle_Closure_declarations() {\n/** @type {?} */\nUniqueSelectionDispatcher.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nUniqueSelectionDispatcher.ctorParameters;\n/** @type {?} */\nUniqueSelectionDispatcher.prototype._listeners;\n}\n\n/**\n * \\@docs-private\n * @param {?} parentDispatcher\n * @return {?}\n */\nexport function UNIQUE_SELECTION_DISPATCHER_PROVIDER_FACTORY(\n    parentDispatcher: UniqueSelectionDispatcher) {\n  return parentDispatcher || new UniqueSelectionDispatcher();\n}\n/**\n * \\@docs-private\n */\nexport const UNIQUE_SELECTION_DISPATCHER_PROVIDER = {\n  // If there is already a dispatcher available, use that. Otherwise, provide a new one.\n  provide: UniqueSelectionDispatcher,\n  deps: [[new Optional(), new SkipSelf(), UniqueSelectionDispatcher]],\n  useFactory: UNIQUE_SELECTION_DISPATCHER_PROVIDER_FACTORY\n};\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {Constructor} from './constructor';\nimport {CanDisable} from './disabled';\n\n/** @docs-private */\nexport interface HasTabIndex {\n  tabIndex: number;\n}\n/**\n * Mixin to augment a directive with a `tabIndex` property.\n * @template T\n * @param {?} base\n * @param {?=} defaultTabIndex\n * @return {?}\n */\nexport function mixinTabIndex<T extends Constructor<CanDisable>>(base: T, defaultTabIndex = 0)\n    : Constructor<HasTabIndex> & T {\n  return class extends base {\nprivate _tabIndex: number = defaultTabIndex;\n/**\n * @return {?}\n */\nget tabIndex(): number { return this.disabled ? -1 : this._tabIndex; }\n/**\n * @param {?} value\n * @return {?}\n */\nset tabIndex(value: number) {\n      // If the specified tabIndex value is null or undefined, fall back to the default value.\n      this._tabIndex = value != null ? value : defaultTabIndex;\n    }\n/**\n * @param {...?} args\n */\nconstructor(...args: any[]) {\n      super(...args);\n    }\n  };\n}\n\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {coerceBooleanProperty} from '@angular/cdk/coercion';\nimport {Constructor} from './constructor';\n\n/** @docs-private */\nexport interface CanDisableRipple {\n  disableRipple: boolean;\n}\n/**\n * Mixin to augment a directive with a `disableRipple` property.\n * @template T\n * @param {?} base\n * @return {?}\n */\nexport function mixinDisableRipple<T extends Constructor<{}>>(base: T)\n    : Constructor<CanDisableRipple> & T {\n  return class extends base {\nprivate _disableRipple: boolean = false;\n/**\n * Whether the ripple effect is disabled or not.\n * @return {?}\n */\nget disableRipple() { return this._disableRipple; }\n/**\n * @param {?} value\n * @return {?}\n */\nset disableRipple(value: any) { this._disableRipple = coerceBooleanProperty(value); }\n/**\n * @param {...?} args\n */\nconstructor(...args: any[]) { super(...args); }\n  };\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {Constructor} from './constructor';\nimport {ElementRef, Renderer2} from '@angular/core';\n\n/** @docs-private */\nexport interface CanColor {\n  color: ThemePalette;\n}\n\n/** @docs-private */\nexport interface HasRenderer {\n  _renderer: Renderer2;\n  _elementRef: ElementRef;\n}\n\n/** Possible color palette values.  */\nexport type ThemePalette = 'primary' | 'accent' | 'warn' | undefined;\n/**\n * Mixin to augment a directive with a `color` property.\n * @template T\n * @param {?} base\n * @param {?=} defaultColor\n * @return {?}\n */\nexport function mixinColor<T extends Constructor<HasRenderer>>(base: T, defaultColor?: ThemePalette)\n    : Constructor<CanColor> & T {\n  return class extends base {\nprivate _color: ThemePalette;\n/**\n * @return {?}\n */\nget color(): ThemePalette { return this._color; }\n/**\n * @param {?} value\n * @return {?}\n */\nset color(value: ThemePalette) {\n      const /** @type {?} */ colorPalette = value || defaultColor;\n\n      if (colorPalette !== this._color) {\n        if (this._color) {\n          this._renderer.removeClass(this._elementRef.nativeElement, `mat-${this._color}`);\n        }\n        if (colorPalette) {\n          this._renderer.addClass(this._elementRef.nativeElement, `mat-${colorPalette}`);\n        }\n\n        this._color = colorPalette;\n      }\n    }\n/**\n * @param {...?} args\n */\nconstructor(...args: any[]) {\n      super(...args);\n\n      // Set the default color that can be specified from the mixin.\n      this.color = defaultColor;\n    }\n  };\n}\n\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {coerceBooleanProperty} from '@angular/cdk/coercion';\nimport {Constructor} from './constructor';\n\n/** @docs-private */\nexport interface CanDisable {\n  disabled: boolean;\n}\n/**\n * Mixin to augment a directive with a `disabled` property.\n * @template T\n * @param {?} base\n * @return {?}\n */\nexport function mixinDisabled<T extends Constructor<{}>>(base: T): Constructor<CanDisable> & T {\n  return class extends base {\nprivate _disabled: boolean = false;\n/**\n * @return {?}\n */\nget disabled() { return this._disabled; }\n/**\n * @param {?} value\n * @return {?}\n */\nset disabled(value: any) { this._disabled = coerceBooleanProperty(value); }\n/**\n * @param {...?} args\n */\nconstructor(...args: any[]) { super(...args); }\n  };\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {NgModule, InjectionToken, Optional, Inject, isDevMode} from '@angular/core';\nimport {DOCUMENT} from '@angular/platform-browser';\nimport {BidiModule} from '@angular/cdk/bidi';\nimport {CompatibilityModule} from '../compatibility/compatibility';\n/**\n * Injection token that configures whether the Material sanity checks are enabled.\n */\nexport const MATERIAL_SANITY_CHECKS = new InjectionToken<boolean>('mat-sanity-checks');\n/**\n * Module that captures anything that should be loaded and/or run for *all* Angular Material\n * components. This includes Bidi, compatibility mode, etc.\n * \n * This module should be imported to each top-level component module (e.g., MatTabsModule).\n */\nexport class MatCommonModule {\n/**\n * Whether we've done the global sanity checks (e.g. a theme is loaded, there is a doctype).\n */\nprivate _hasDoneGlobalChecks = false;\n/**\n * @param {?} _document\n * @param {?} _sanityChecksEnabled\n */\nconstructor(\nprivate _document: any,\n      _sanityChecksEnabled: boolean) {\n\n    if (_sanityChecksEnabled && !this._hasDoneGlobalChecks && _document && isDevMode()) {\n      this._checkDoctype();\n      this._checkTheme();\n      this._hasDoneGlobalChecks = true;\n    }\n  }\n/**\n * @return {?}\n */\nprivate _checkDoctype(): void {\n    if (!this._document.doctype) {\n      console.warn(\n        'Current document does not have a doctype. This may cause ' +\n        'some Angular Material components not to behave as expected.'\n      );\n    }\n  }\n/**\n * @return {?}\n */\nprivate _checkTheme(): void {\n    if (typeof getComputedStyle === 'function') {\n      const /** @type {?} */ testElement = this._document.createElement('div');\n\n      testElement.classList.add('mat-theme-loaded-marker');\n      this._document.body.appendChild(testElement);\n\n      if (getComputedStyle(testElement).display !== 'none') {\n        console.warn(\n          'Could not find Angular Material core theme. Most Material ' +\n          'components may not work as expected. For more info refer ' +\n          'to the theming guide: https://material.angular.io/guide/theming'\n        );\n      }\n\n      this._document.body.removeChild(testElement);\n    }\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n  imports: [CompatibilityModule, BidiModule],\n  exports: [CompatibilityModule, BidiModule],\n  providers: [{\n    provide: MATERIAL_SANITY_CHECKS, useValue: true,\n  }],\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [DOCUMENT, ] }, ]},\n{type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MATERIAL_SANITY_CHECKS, ] }, ]},\n];\n}\n\nfunction MatCommonModule_tsickle_Closure_declarations() {\n/** @type {?} */\nMatCommonModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nMatCommonModule.ctorParameters;\n/**\n * Whether we've done the global sanity checks (e.g. a theme is loaded, there is a doctype).\n * @type {?}\n */\nMatCommonModule.prototype._hasDoneGlobalChecks;\n/** @type {?} */\nMatCommonModule.prototype._document;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {Directive, InjectionToken, NgModule} from '@angular/core';\n\nexport const /** @type {?} */ MATERIAL_COMPATIBILITY_MODE = new InjectionToken<boolean>('md-compatibility-mode');\n/**\n * Selector that matches all elements that may have style collisions with AngularJS Material.\n */\nexport const MAT_ELEMENTS_SELECTOR = `\n  [mat-button],\n  [mat-fab],\n  [mat-icon-button],\n  [mat-mini-fab],\n  [mat-raised-button],\n  [matCardSubtitle],\n  [matCardTitle],\n  [matCellDef],\n  [matColumnDef],\n  [matDialogActions],\n  [matDialogClose],\n  [matDialogContent],\n  [matDialogTitle],\n  [matHeaderCellDef],\n  [matHeaderRowDef],\n  [matLine],\n  [matRowDef],\n  [matStepLabel],\n  [matStepperNext],\n  [matStepperPrevious],\n  [matTabLabel],\n  [matTabLink],\n  [matTabNav],\n  [matTooltip],\n  [matInput],\n  [matPrefix],\n  [matSuffix],\n  mat-autocomplete,\n  mat-button-toggle,\n  mat-button-toggle,\n  mat-button-toggle-group,\n  mat-card,\n  mat-card-actions,\n  mat-card-content,\n  mat-card-footer,\n  mat-card-header,\n  mat-card-subtitle,\n  mat-card-title,\n  mat-card-title-group,\n  mat-cell,\n  mat-checkbox,\n  mat-chip,\n  mat-dialog-actions,\n  mat-dialog-container,\n  mat-dialog-content,\n  mat-divider,\n  mat-error,\n  mat-grid-list,\n  mat-grid-tile,\n  mat-grid-tile-footer,\n  mat-grid-tile-header,\n  mat-header-cell,\n  mat-header-row,\n  mat-hint,\n  mat-horizontal-stepper,\n  mat-icon,\n  mat-input-container,\n  mat-form-field,\n  mat-list,\n  mat-list-item,\n  mat-menu,\n  mat-nav-list,\n  mat-option,\n  mat-placeholder,\n  mat-progress-bar,\n  mat-pseudo-checkbox,\n  mat-radio-button,\n  mat-radio-group,\n  mat-row,\n  mat-select,\n  mat-sidenav,\n  mat-sidenav-container,\n  mat-slider,\n  mat-spinner,\n  mat-step,\n  mat-tab,\n  mat-table,\n  mat-tab-group,\n  mat-toolbar,\n  mat-vertical-stepper`;\n/**\n * Selector that matches all elements that may have style collisions with AngularJS Material.\n */\nexport const MD_ELEMENTS_SELECTOR = `\n  [md-button],\n  [md-fab],\n  [md-icon-button],\n  [md-mini-fab],\n  [md-raised-button],\n  [mdCardSubtitle],\n  [mdCardTitle],\n  [mdCellDef],\n  [mdColumnDef],\n  [mdDialogActions],\n  [mdDialogClose],\n  [mdDialogContent],\n  [mdDialogTitle],\n  [mdHeaderCellDef],\n  [mdHeaderRowDef],\n  [mdLine],\n  [mdRowDef],\n  [mdStepLabel],\n  [mdStepperNext],\n  [mdStepperPrevious],\n  [mdTabLabel],\n  [mdTabLink],\n  [mdTabNav],\n  [mdTooltip],\n  [mdInput],\n  [mdPrefix],\n  [mdSuffix],\n  md-autocomplete,\n  md-button-toggle,\n  md-button-toggle,\n  md-button-toggle-group,\n  md-card,\n  md-card-actions,\n  md-card-content,\n  md-card-footer,\n  md-card-header,\n  md-card-subtitle,\n  md-card-title,\n  md-card-title-group,\n  md-cell,\n  md-checkbox,\n  md-chip,\n  md-dialog-actions,\n  md-dialog-container,\n  md-dialog-content,\n  md-divider,\n  md-error,\n  md-grid-list,\n  md-grid-tile,\n  md-grid-tile-footer,\n  md-grid-tile-header,\n  md-header-cell,\n  md-header-row,\n  md-hint,\n  md-horizontal-stepper,\n  md-icon,\n  md-input-container,\n  md-form-field,\n  md-list,\n  md-list-item,\n  md-menu,\n  md-nav-list,\n  md-option,\n  md-placeholder,\n  md-progress-bar,\n  md-pseudo-checkbox,\n  md-radio-button,\n  md-radio-group,\n  md-row,\n  md-select,\n  md-sidenav,\n  md-sidenav-container,\n  md-slider,\n  md-spinner,\n  md-step,\n  md-tab,\n  md-table,\n  md-tab-group,\n  md-toolbar,\n  md-vertical-stepper`;\n/**\n * Directive that enforces that the `mat-` prefix cannot be used.\n */\nexport class MatPrefixRejector {static decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{selector: MAT_ELEMENTS_SELECTOR}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction MatPrefixRejector_tsickle_Closure_declarations() {\n/** @type {?} */\nMatPrefixRejector.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nMatPrefixRejector.ctorParameters;\n}\n\n/**\n * Directive that enforces that the `md-` prefix cannot be used.\n */\nexport class MdPrefixRejector {static decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{selector: MD_ELEMENTS_SELECTOR}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction MdPrefixRejector_tsickle_Closure_declarations() {\n/** @type {?} */\nMdPrefixRejector.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nMdPrefixRejector.ctorParameters;\n}\n\n/**\n * Module that enforces the default compatibility mode settings. When this module is loaded\n * without NoConflictStyleCompatibilityMode also being imported, it will throw an error if\n * there are any uses of the `mat-` prefix.\n */\nexport class CompatibilityModule {static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n  declarations: [MatPrefixRejector, MdPrefixRejector],\n  exports: [MatPrefixRejector, MdPrefixRejector],\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction CompatibilityModule_tsickle_Closure_declarations() {\n/** @type {?} */\nCompatibilityModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nCompatibilityModule.ctorParameters;\n}\n\n/**\n * Module that enforces \"no-conflict\" compatibility mode settings. When this module is loaded,\n * it will throw an error if there are any uses of the `md-` prefix.\n */\nexport class NoConflictStyleCompatibilityMode {static decorators: DecoratorInvocation[] = [\n{ type: NgModule },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction NoConflictStyleCompatibilityMode_tsickle_Closure_declarations() {\n/** @type {?} */\nNoConflictStyleCompatibilityMode.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nNoConflictStyleCompatibilityMode.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","\n/**\n * \\@docs-private\n */\nexport class AnimationCurves {\n  static STANDARD_CURVE = 'cubic-bezier(0.4,0.0,0.2,1)';\n  static DECELERATION_CURVE = 'cubic-bezier(0.0,0.0,0.2,1)';\n  static ACCELERATION_CURVE = 'cubic-bezier(0.4,0.0,1,1)';\n  static SHARP_CURVE = 'cubic-bezier(0.4,0.0,0.6,1)';\n}\n\nfunction AnimationCurves_tsickle_Closure_declarations() {\n/** @type {?} */\nAnimationCurves.STANDARD_CURVE;\n/** @type {?} */\nAnimationCurves.DECELERATION_CURVE;\n/** @type {?} */\nAnimationCurves.ACCELERATION_CURVE;\n/** @type {?} */\nAnimationCurves.SHARP_CURVE;\n}\n\n/**\n * \\@docs-private\n */\nexport class AnimationDurations {\n  static COMPLEX = '375ms';\n  static ENTERING = '225ms';\n  static EXITING = '195ms';\n}\n\nfunction AnimationDurations_tsickle_Closure_declarations() {\n/** @type {?} */\nAnimationDurations.COMPLEX;\n/** @type {?} */\nAnimationDurations.ENTERING;\n/** @type {?} */\nAnimationDurations.EXITING;\n}\n\n"],"names":[],"mappings":"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"}