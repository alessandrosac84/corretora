{"version":3,"file":"toolbar.es5.js","sources":["../../../src/lib/toolbar/index.ts","../../../src/lib/toolbar/toolbar-module.ts","../../../src/lib/toolbar/toolbar.ts"],"sourcesContent":["/**\n * Generated bundle index. Do not edit.\n */\n\nexport {MatToolbarModule,MatToolbarRow,MatToolbarBase,_MatToolbarMixinBase,MatToolbar} from './public_api';\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {NgModule} from '@angular/core';\nimport {MatCommonModule} from '@angular/material/core';\nimport {MatToolbar, MatToolbarRow} from './toolbar';\nexport class MatToolbarModule {static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n  imports: [MatCommonModule],\n  exports: [MatToolbar, MatToolbarRow, MatCommonModule],\n  declarations: [MatToolbar, MatToolbarRow],\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction MatToolbarModule_tsickle_Closure_declarations() {\n/** @type {?} */\nMatToolbarModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nMatToolbarModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {\n  ChangeDetectionStrategy,\n  Component,\n  Directive,\n  ElementRef,\n  Renderer2,\n  ViewEncapsulation,\n} from '@angular/core';\nimport {CanColor, mixinColor} from '@angular/material/core';\nexport class MatToolbarRow {static decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n  selector: 'mat-toolbar-row',\n  host: {'class': 'mat-toolbar-row'},\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction MatToolbarRow_tsickle_Closure_declarations() {\n/** @type {?} */\nMatToolbarRow.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nMatToolbarRow.ctorParameters;\n}\n\n/**\n * \\@docs-private\n */\nexport class MatToolbarBase {\n/**\n * @param {?} _renderer\n * @param {?} _elementRef\n */\nconstructor(public _renderer: Renderer2,\npublic _elementRef: ElementRef) {}\n}\n\nfunction MatToolbarBase_tsickle_Closure_declarations() {\n/** @type {?} */\nMatToolbarBase.prototype._renderer;\n/** @type {?} */\nMatToolbarBase.prototype._elementRef;\n}\n\nexport const /** @type {?} */ _MatToolbarMixinBase = mixinColor(MatToolbarBase);\nexport class MatToolbar extends _MatToolbarMixinBase implements CanColor {\n/**\n * @param {?} renderer\n * @param {?} elementRef\n */\nconstructor(renderer: Renderer2, elementRef: ElementRef) {\n    super(renderer, elementRef);\n  }\n\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  moduleId: module.id,\n  selector: 'mat-toolbar',\n  templateUrl: 'toolbar.html',\n  styleUrls: ['toolbar.css'],\n  inputs: ['color'],\n  host: {\n    'class': 'mat-toolbar',\n    'role': 'toolbar'\n  },\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  preserveWhitespaces: false,\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: Renderer2, },\n{type: ElementRef, },\n];\n}\n\nfunction MatToolbar_tsickle_Closure_declarations() {\n/** @type {?} */\nMatToolbar.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nMatToolbar.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"],"names":[],"mappings":";;;;;;;;;;AEkBA,MAAA,aAAA,CAAA;;AAEmC,aAAnC,CAAA,UAAmC,GAAoC;IADvE,EAEE,IAAA,EAAM,SAAA,EAAW,IAAA,EAAM,CAAA;gBADvB,QAAQ,EAEE,iBAAA;gBADV,IAAI,EAEE,EAAA,OAAE,EAAQ,iBAAA,EAAkB;aADnC,EAEC,EAAG;CADJ,CAEC;;;;AAED,aAAD,CAAA,cAAC,GAAA,MAAA,EACA,CAAC;AAGF,AAUA;;;AAGA,AAAA,MAAA,cAAA,CAAA;;;;;IAKA,WAAA,CAfqB,SAAW,EAAkB,WAAa,EAe/D;QAfqB,IAArB,CAAA,SAAqB,GAAA,SAAA,CAAW;QAAkB,IAAlD,CAAA,WAAkD,GAAA,WAAA,CAAa;KAAW;CAiBzE;AAED,AAOA,AA9BO,MAAM,oBAAA,GAAuB,UAAA,CAAW,cAAC,CAAc,CAAC;AA+B/D,AAAA,MAAA,UArBC,SAAA,oBAAA,CAqBD;;;;;IAKA,WAAA,CAxBG,QAAqB,EAAW,UAAY,EAwB/C;QAbE,KAAA,CAAA,QAAA,EAAA,UAAA,CAAA,CAAA;KAeC;;AAtBI,UAAP,CAAA,UAAO,GAAoC;IAyB3C,EAxBE,IAAA,EAAM,SAAA,EAAW,IAAA,EAAM,CAAA,CAwBzB,QAAA,EAAA,aAAA;gBACE,QAAQ,EAxBE,0JAwBZ;gBACE,MAAF,EAAU,CAAV,qXAAA,CAAA;gBACE,MAAF,EAAA,CAAA,OAAA,CAAA;gBACE,IAAF,EAAA;oBACA,OAAA,EAAA,aAAA;oBACM,MAAN,EAAA,SAAA;iBACA;gBACA,eAAA,EAAA,uBAAA,CAAA,MAAA;gBACA,aAAA,EAAA,iBAAA,CAAA,IAAA;gBACE,mBAAF,EAAA,KAAA;aACA,EAAA,EAAA;CACA,CAAA;;;;;IAKA,EAAA,IAAA,EAAA,SAAA,GAAA;IAzBA,EAAA,IAAA,EAAA,UAAA,GAAC;CA2BD,CAAA,AACA,AAUA,AACA;;AD1FA,MAAA,gBAAA,CAAA;;AAEsC,gBAAtC,CAAA,UAAsC,GAAoC;IAD1E,EAEE,IAAA,EAAM,QAAA,EAAU,IAAA,EAAM,CAAA;gBADtB,OAAO,EAEE,CAAA,eAAE,CAAe;gBAD1B,OAAO,EAEE,CAAA,UAAE,EAAW,aAAA,EAAe,eAAA,CAAgB;gBADrD,YAAY,EAEE,CAAA,UAAE,EAAW,aAAA,CAAc;aAD1C,EAEC,EAAG;CADJ,CAEC;;;;AAED,gBAAD,CAAA,cAAC,GAAA,MAAA,EACA,CAAC,AAGF,AAQC;;ADlCD;;GAEG,AAEH,AAA2G;;"}